openapi: 3.0.0
info:
  title: OnePageCRM API
  description: >-
    <i>- OnePageCRM converts the complexity of a CRM system to a simple to-do list.<br>
    - For more information on OnePageCRM please visit our [website](https://www.onepagecrm.com).<br>
    - If you have trouble using this API or notice any issue with this documentation please contact us on our
    [developer forum](http://forum.developer.onepagecrm.com/).</i>

    <br><br>
    <h3>Authentication</h3>
    The OnePageCRM API makes use of
    <a target="_blank" href="https://en.wikipedia.org/wiki/Basic_access_authentication">HTTP Basic Authentication</a>.
    To authenticate using HTTP Basic Auth, you need the <code>user_id</code> and <code>auth_key</code> associated
    with your OnePageCRM account. Your username is your <code>user_id</code> and your password is your
    <code>auth_key</code>.<br>

    <br>
    <i>This information can be found by logging into your OnePageCRM account and navigating to
    <a target="_blank" href="https://app.onepagecrm.com/app/api">https://app.onepagecrm.com/app/api</a>
    and selecting the configuration tab.</i><br>

    <br><br>
    <h3>Formats</h3>
    The API can send <u>and</u> receive data in <code>XML</code> and <code>JSON</code>, as well as receive data as
    URL encoded query strings.

    <br>
    To send and receive <code>XML</code> or <code>JSON</code> you need to include the correct
    <code>content-type</code> header and replace the <code>.format</code> in the url.

    <br>
    <table class="table table-striped table-bordered">
      <thead>
        <tr>
          <td>Type</td>
          <td>Content-Type</td>
          <td>.format</td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="name">JSON</td>
          <td>application/json</td>
          <td>.json</td>
        </tr>
        <tr>
          <td class="name">XML</td>
          <td>application/xml</td>
          <td>.xml</td>
        </tr>
      </tbody>
    </table>

    <br><br>
    <h3>Headers</h3>
      <p>These headers need to be included with every request made to the API</code>.</p>
      <table class="table table-bordered table-striped">
        <thead>
          <td>Name</td>
          <td>Description</td>
        </thead>
        <tbody>
          <tr>
            <td class="strong nowrap">X-OnePageCRM-UID</td>
            <td>The user’s unique identification number (<code>user_id</code>)</td>
          </tr>
          <tr>
            <td class="strong nowrap">X-OnePageCRM-TS</td>
            <td>The current timestamp in Unix time (seconds elapsed since Epoch)</td>
          </tr>
          <tr>
            <td class="strong nowrap">X-OnePageCRM-Auth</td>
            <td>The user's HTTP Basic Auth data. Generated using <code>user_id</code> and <code>api_key</code></td>
          </tr>
        </tbody>
      </table>

      <div class="alert alert-danger">
      <strong>Warning:</strong> These headers are case sensitive! If you do not send these headers exactly as they
      appear here you will obtain a <strong>"401 Unauthorized"</strong> error when making signed requests.
      </div>

    <br>
    <h3>Partial Updates</h3>
    You can partially update or create resources through our API by including the value <code>partial=true</code> in
    the <code>POST</code>/<code>PUT</code> request body or in the request params. This is the equivalent of using
    the emerging RESTful API standard’s <code>PATCH</code> method.<br>

    <br>
    When creating a resource ‘partially’ using a <code>POST</code> request you don’t need to include all of the
    resource’s fields. All fields will be automatically set to <code>null</code> if they are not included. Note
    that the <code>POST</code> could still fail when partially creating a resource but not including the minimum
    required fields.<br>

    <br>
    When updating a resource ‘partially’ using a <code>PUT</code> request, any fields you don’t include will stay the
    same as before.
    <br><br>
    <div class="alert alert-danger">
      <strong>Warning:</strong> You need to exercise caution when partially updating sub resources. If you tried
      only updating a contact’s phone numbers you need to include all phone numbers that you don’t want to be deleted,
      as we don’t extend the partial update feature to sub resources.
    </div>

    <br><br>
    <h3>Pagination</h3>
    <p>Whenever you are fetching a list of records, you can paginate the response with these standard parameters:</p>
    <table class="table table-striped table-bordered">
      <thead>
        <tr>
          <td>Name</td>
          <td>Type</td>
          <td>Description</td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="nowrap">page</td>
          <td class="nowrap">integer</td>
          <td>Page number. Starts from 1. Default is 1</td>
        </tr>
        <tr>
          <td>per_page</td>
          <td>integer</td>
          <td>Number of records to return. Maximum 100 allowed. Default is 10</td>
        </tr>
      </tbody>
    </table>
    <p>So, for example, to fetch the first batch of 20 contacts:</p>
    <p class="url"><code class="bluetext"><span class="get-text">GET</span> contacts.json?per_page=20&page=1</code></p>
    <p>And to fetch the second batch of 20 contacts:</p>
    <p class="url"><code class="bluetext"><span class="get-text">GET</span> contacts.json?per_page=20&page=2</code></p>

    <br><br>
    <h3>Undo Deletion</h3>
    <table class="table table-striped table-bordered">
      <thead>
        <tr>
          <td>Name</td>
          <td>Type</td>
          <td>Description</td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="nowrap">undo</td>
          <td class="nowrap">boolean</td>
          <td>Revert the deleting operation.</td>
        </tr>
      </tbody>
    </table>
    <p>If you delete a contact with a <span class="delete-text">DELETE</span> request like this:</p>
    <p class="url"><code class="bluetext"><span class="delete-text">DELETE</span> contacts/51f251d5eb899749f7000006.json</code></p>
    <p>You can undo it by specifying an undo flag:</p>
    <p class="url"><code class="bluetext"><span class="delete-text">DELETE</span> contacts/51f251d5eb899749f7000006.json?undo=true</code></p>

    <br><br>
    <h3>Limit Listings by Time</h3>
      <p>
        When fetching collections, you can request the API only returns records that were modified in a given time range.
      </p>
      <table class="table table-striped table-bordered">
        <thead>
          <tr>
            <td>Name</td>
            <td>Type</td>
            <td>Description</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>date_filter</td>
            <td>time</td>
            <td>Filter returned data by a particular field when combined with since and until.</td>
          </tr>
          <tr>
            <td>since</td>
            <td>time</td>
            <td>Return resources with dates in the provided date_filter parameter since this time. Otherwise it will return resources that were modified since this time.</td>
          </tr>
          <tr>
            <td>until</td>
            <td>time</td>
            <td>Return resources with dates in the provided date_filter parameter until this time. Otherwise it will return resources that were modified until this time.</td>
          </tr>
          <tr>
            <td class="nowrap">unmodified_since</td>
            <td class="nowrap">time</td>
            <td>Return only records that were unmodified since specified time.</td>
          </tr>
          <tr>
            <td>modified_since</td>
            <td>time</td>
            <td>Return only records that were modified since specified time.</td>
          </tr>
        <tbody>
      </table>

    <br><br>
    <h3>Sort Listings by Field</h3>
      <table class="table table-striped table-bordered">
        <thead>
          <tr>
            <td>Name</td>
            <td>Type</td>
            <td>Description</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>sort_by</td>
            <td>string</td>
            <td>Name of field to sort results by (eg. 'email' or 'date').</td>
          </tr>
          <tr>
            <td>order</td>
            <td>string</td>
            <td><code> asc || desc </code></td>
          </tr>
        </tbody>
      </table>
      <p>
        Using these two fields you can sort the response by a specific field in either ascending or descending order. Ascending is the default order. Here is an example for sorting contacts by firstname in reverse alphabetical order:
      </p>
      <p class="url">
        <code class="bluetext">
          <span class="get-text">GET</span>
          contacts.json?sort_by=first_name&amp;order=desc
        </code>
      </p>

    <br><br>
    <h3>Using this Documentation</h3>
      <p>
      You can use these docs to interact directly with the API. Simply:
      <ol>
        <li>
          Click the green "Authorise" button below
        </li>
        <li>
          Supply your username (<code>user_id</code>) and password (<code>auth_key</code>)
        </li>
        <li>
          Find the endpoint you wish to interact with, and method you wish to use
        </li>
        <li>
          Clicking "Try it out" lets you edit the query params, request body and run requests
        </li>
        <li>
          For <code>GET</code> requests - you can change the query params
        </li>
        <li>
          For <code>POST</code>/<code>PUT</code> requests - you can edit the request body
        </li>
        <li>
          When you're happy to do so - click "Execute"
        </li>
      </ol>

      Sample responses are shown for all requests below.
      </p>
      <div class="alert alert-danger">
        <strong>Warning:</strong> Any changes made in this way will effect your OnePageCRM data. If this is your
        main account, please exercise caution when making any changes.
      </div>
    </div>
    <br><br>

  termsOfService: 'https://www.onepagecrm.com/api-use'
  version: '3.0'
servers:
- url: 'https://app.onepagecrm.com/api/v3'
  description: Production Application Server
- url: 'http://staging.onepagecrm.com/api/v3'
  description: Staging Application Server
security:
- BasicAuth: []
tags:
- name: Authentication
  description: >-
    Get account information like settings and lead sources, log yourself out or change your authentication key.
- name: Users
  description: >-
    Useful information about the logged user and other members of the team. Each can update their own info. Admins
    can update all.
- name: Contacts
  description: >-
    Information about the people you are actively trying to sell to, and related sub-resources like Actions,
    Deals, Notes, and Calls.
- name: Companies
  description: >-
    Referred to as 'organizations' in the web application. Companies are logical collections of Contacts and
    related sub-resources e.g. Deals, Actions and some basic info on the org. e.g. postal address, website. A
    Company may not be created directly or exist without a Contact.
- name: Actions
  description: >-
    Completable tasks related to Contacts. ASAP first, then dated actions ordered by due date (overdue first),
    followed by waiting for (blocked) and finally queued actions (without any date).
- name: Action Stream
  description: >-
    A listing of contacts prioritized by when their next action is due. The Action Stream is the default view in
    the OnePageCRM web application.
- name: Team Stream
  description: >-
    The Action Stream for all users on the account in a single list, or for any individual user on the account
    (not just the logged user). The same Action Stream sorting is applied.
- name: Deals
  description: >-
    Represent (potential) financial transactions with your contacts. Deals include information like
    amount, deal stage, closed date or expected close date. Deals support file attachments.
- name: Notes
  description: >-
    Allow you to keep track of additional information related to your contacts. Notes can include any
    information you feel is relevant e.g. interactions with that contact. Notes support file attachments.
- name: Calls
  description: >-
    Allow you to keep track of phone calls made to your contacts. Calls include information like the phone
    number dialled and the call result. Calls support file attachments.
- name: Attachments
  description: >-
    Additional files associated with Deals, Notes or Calls. They can be uploaded and stored in S3, or stored in
    external providers i.e. Google Drive, Dropbox, Evernote.
- name: Statuses
  description: >-
    Values which help qualify where contacts are in the sales pipeline. The list of Statuses is
    already populated but it may be updated if needed, to better fit your organization.
- name: Lead Sources
  description: >-
    A way to classify the source of any contact that is added to OnePageCRM. Like Statuses, this list is
    pre-populated, and can be later edited to fit individual needs.
- name: Filters
  description: >-
    Allow you to query contacts in your own custom way. These filters can only be created on the website but they
    can be used through the API.
- name: Predefined Actions
  description: >-
    Template actions users may use frequently in their sales process. Referred to as 'Saved Actions' in the web
    application.
- name: Custom Fields
  description: >-
    Extra user-configurable data fields for Contacts. Only editable by admins.
- name: Company Fields
  description: >-
    Extra user-configurable data fields for Companies. Only editable by admins.
- name: Deal Fields
  description: >-
    Extra user-configurable data fields for Deals. Only editable by admins.
- name: Countries
  description: >-
    A list of all compatible countries and their ISO-3166 codes.
- name: Web Hooks
  description: >-
    A simple, effective way to be notified when things happen in OnePageCRM. For more information, go to the
    'WebHooks & More' tab at the top of the page.
paths:
  /bootstrap:
    get:
      summary: Get useful information about the logged API user's account
      description: >-
        Includes things like: <br>
        -> Global account config e.g. lead sources and deal stages. <br>
        -> User specific config e.g. date format, time zone info. <br>
      parameters: []
      tags:
      - Authentication
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    $ref: '#/components/schemas/Bootstrap'
                  lead_sources:
                    $ref: '#/components/schemas/Lead_source'
                  statuses:
                    $ref: '#/components/schemas/Status'
                  tags:
                    description: >-
                      Tags provide a means to classify contacts by however many
                      tags you choose to attach to them. There are 2 types of
                      tags, tags and system tags
                    properties:
                      tags:
                        description: >-
                          An array of custom tags. A custom tag is a user created tag used for categorising contacts
                        type: array
                        items:
                          $ref: '#/components/schemas/Tag'
                      system_tags:
                        description: >-
                          An array of system tags. A system tag is a system
                          generate tag used for categorising contacts
                        type: array
                        items:
                          $ref: '#/components/schemas/Tag'
                  contacts_count:
                    $ref: '#/components/schemas/Contacts_count'
                  team_stream:
                    $ref: '#/components/schemas/Team_stream'
        400:
          $ref: '#/components/responses/400'
  /logout:
    post:
      summary: Log the user out of all applications (including mobile)
      description: >-
        **Warning:** This will log the user out of all applications, by changing their authentication key. <br>
        If you wish to log a user out - instead just forget their auth key. Note: this includes the mobile applications. <br>
      parameters: []
      tags:
      - Authentication
      responses:
        201:
          $ref: '#/components/responses/201'
        400:
          $ref: '#/components/responses/400'
  /change_auth_key:
    post:
      summary: Invalidate auth key and return a new auth key
      description: >-
        **Warning:** This will change the user's authentication key, and therefore log them out of all applications. <br>
        Note: this includes the mobile applications. <br>
      tags:
      - Authentication
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      auth_key:
                        description: New Api Key
                        type: string
                        example: wbJBo+odEikiDOjdnL+P+0fl+Dbgk84747jFtyOZghs=
  /users:
    get:
      summary: Get the list of users (for the logged API user's account)
      tags:
      - Users
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    type: array
                    items:
                      properties:
                        user:
                          $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /users/{user_id}:
    get:
      summary: Get a specific user
      tags:
      - Users
      parameters:
      - $ref: '#/components/parameters/path_user_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific user
      description: >-
        Each team member can edit their own details, admins can update all. <br>
        Only the following fields may be edited through the API: <br>
        -> <b>first_name</b> <br>
        -> <b>last_name</b> <br>
        -> <b>company</b> <br>
        -> <b>bcc_email</b> <i>(Set this field to `true` to generate a new BCC email address,
        otherwise omit the field entirely. You can only update this field for yourself.)</i> <br>
      tags:
      - Users
      parameters:
      - $ref: '#/components/parameters/path_user_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                first_name:
                  $ref: '#/components/schemas/User/properties/first_name'
                last_name:
                  $ref: '#/components/schemas/User/properties/last_name'
                company_name:
                  $ref: '#/components/schemas/User/properties/company_name'
                bcc_email:
                  example: "true"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /lead_sources:
    get:
      summary: Get the list of lead sources (for the logged API user's account)
      tags:
      - Lead Sources
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      items:
                        $ref: '#/components/schemas/Lead_source'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new lead source
      tags:
      - Lead Sources
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                text:
                  $ref: '#/components/schemas/Lead_source/properties/text'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    $ref: '#/components/schemas/Lead_source'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /lead_sources/{lead_source_id}:
    get:
      summary: Get a specific lead source
      tags:
      - Lead Sources
      parameters:
      - $ref: '#/components/parameters/path_lead_source_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    $ref: '#/components/schemas/Lead_source'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific lead source
      tags:
      - Lead Sources
      parameters:
      - $ref: '#/components/parameters/path_lead_source_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                text:
                  $ref: '#/components/schemas/Lead_source/properties/text'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    $ref: '#/components/schemas/Lead_source'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific lead source
      tags:
      - Lead Sources
      parameters:
      - $ref: '#/components/parameters/path_lead_source_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /statuses:
    get:
      summary: Get the list of statuses (for the logged API user's account)
      description: ''
      tags:
      - Statuses
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      statuses:
                        type: array
                        items:
                          properties:
                            status:
                              $ref: '#/components/schemas/Status'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new status
      description: ''
      tags:
      - Statuses
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                text:
                  $ref: '#/components/schemas/Status/properties/text'
                description:
                  $ref: '#/components/schemas/Status/properties/description'
                color:
                  $ref: '#/components/schemas/Status/properties/color'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      Statises:
                        type: array
                        items:
                          properties:
                            status:
                              $ref: '#/components/schemas/Status'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  '/statuses/{status_id}':
    get:
      summary: Get a specific status
      description: ''
      tags:
      - Statuses
      parameters:
      - $ref: '#/components/parameters/path_status_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      status:
                        $ref: '#/components/schemas/Status'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific status
      description: ''
      tags:
      - Statuses
      parameters:
      - $ref: '#/components/parameters/path_status_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                text:
                  $ref: '#/components/schemas/Status/properties/text'
                description:
                  $ref: '#/components/schemas/Status/properties/description'
                color:
                  $ref: '#/components/schemas/Status/properties/color'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      status:
                        $ref: '#/components/schemas/Status'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific status
      description: ''
      tags:
      - Statuses
      parameters:
      - $ref: '#/components/parameters/path_status_id'
      responses:
        200:
          description: OK
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /deal_fields:
    get:
      summary: Get the list of deal fields (for the logged API user's account)
      description: ''
      tags:
      - Deal Fields
      parameters:
      - $ref: '#/components/parameters/query_custom_fields_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deal_fields:
                        type: array
                        items:
                          properties:
                            deal_field:
                              $ref: '#/components/schemas/Deal_field'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new deal field
      description: Only admins can create deal fields.
      tags:
      - Deal Fields
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/Deal_field/properties/name'
                type:
                  $ref: '#/components/schemas/Deal_field/properties/type'
                choices:
                  $ref: '#/components/schemas/Deal_field/properties/choices'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deal_field:
                        $ref: '#/components/schemas/Deal_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  '/deal_fields/{deal_field_id}':
    get:
      summary: Get a specific deal field
      description: ''
      tags:
      - Deal Fields
      parameters:
      - $ref: '#/components/parameters/path_deal_field_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deal_field:
                        $ref: '#/components/schemas/Deal_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific deal field
      description: Only admins can update deal fields.
      tags:
      - Deal Fields
      parameters:
      - $ref: '#/components/parameters/path_deal_field_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/Deal_field/properties/name'
                type:
                  $ref: '#/components/schemas/Deal_field/properties/type'
                choices:
                  $ref: '#/components/schemas/Deal_field/properties/choices'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                    properties:
                      deal_field:
                        $ref: '#/components/schemas/Deal_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific deal field
      description: Only admins can delete deal fields.
      tags:
      - Deal Fields
      parameters:
      - $ref: '#/components/parameters/path_deal_field_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /deal_fields/cost_setup:
    post:
      summary: Enable the cost field for deals
      description: >-
        The cost field can be used for margin-based deals. <br>
        We subtract the deal cost from the deal amount to display the margin. <br>
        You can also calculate commission based on margin instead of amount. <br>
      tags:
      - Deal Fields
      parameters: []
      responses:
        201:
          description: OK Operation Successful
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      cost_setup:
                        $ref: '#/components/schemas/Cost_setup'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update the cost field for deals
      description: ''
      tags:
      - Deal Fields
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                cost_enabled:
                  type: boolean
                  example: false
                cost_required:
                  type: boolean
                  example: false
                commission_base:
                  type: string
                  example: margin
                commission_percentage:
                  type: number
                  example: 10.1
      responses:
        200:
          description: OK Operation Successful
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      cost_setup:
                        $ref: '#/components/schemas/Cost_setup'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Disable the cost field for deals
      description: >-
        The cost field can be used for margin-based deals. This request disables the cost field. <br>
      tags:
      - Deal Fields
      parameters: []
      responses:
        200:
          description: OK Operation Successful
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      cost_setup:
                        $ref: '#/components/schemas/Cost_setup'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /custom_fields:
    get:
      summary: Get the list of custom fields (for the logged API user's account)
      description: ''
      tags:
      - Custom Fields
      parameters:
      - $ref: '#/components/parameters/query_custom_fields_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      custom_fields:
                        type: array
                        items:
                          properties:
                            custom_field:
                              $ref: '#/components/schemas/Custom_field'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new custom field
      description: Only admins can create custom fields.
      tags:
      - Custom Fields
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/Custom_field/properties/name'
                type:
                  $ref: '#/components/schemas/Custom_field/properties/type'
                choices:
                  $ref: '#/components/schemas/Custom_field/properties/choices'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      custom_field:
                        $ref: '#/components/schemas/Custom_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  '/custom_fields/{custom_field_id}':
    get:
      summary: Get a specific custom field
      description: ''
      tags:
      - Custom Fields
      parameters:
      - $ref: '#/components/parameters/path_custom_field_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      custom_field:
                        $ref: '#/components/schemas/Custom_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific custom field
      description: Only admins can update custom fields.
      tags:
      - Custom Fields
      parameters:
      - $ref: '#/components/parameters/path_custom_field_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/Custom_field/properties/name'
                type:
                  $ref: '#/components/schemas/Custom_field/properties/type'
                choices:
                  $ref: '#/components/schemas/Custom_field/properties/choices'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      custom_field:
                        $ref: '#/components/schemas/Custom_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific custom field
      description: Only admins can delete custom fields.
      tags:
      - Custom Fields
      parameters:
      - $ref: '#/components/parameters/path_custom_field_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /company_fields:
    get:
      summary: Get the list of company fields (for the logged API user's account)
      description: ''
      tags:
      - Company Fields
      parameters:
      - $ref: '#/components/parameters/query_custom_fields_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      company_fields:
                        type: array
                        items:
                          properties:
                            company_field:
                              $ref: '#/components/schemas/Company_field'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new company field
      description: Only admins can create company fields.
      tags:
      - Company Fields
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/Company_field/properties/name'
                type:
                  $ref: '#/components/schemas/Company_field/properties/type'
                choices:
                  $ref: '#/components/schemas/Company_field/properties/choices'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      company_field:
                        $ref: '#/components/schemas/Company_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /company_fields/{company_field_id}:
    get:
      summary: Get a specific company field
      description: ''
      tags:
      - Company Fields
      parameters:
      - $ref: '#/components/parameters/path_company_field_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      company_field:
                        $ref: '#/components/schemas/Company_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific company field
      description: Only admins can update company fields.
      tags:
      - Company Fields
      parameters:
      - $ref: '#/components/parameters/path_company_field_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/Company_field/properties/name'
                type:
                  $ref: '#/components/schemas/Company_field/properties/type'
                choices:
                  $ref: '#/components/schemas/Company_field/properties/choices'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      company_field:
                        $ref: '#/components/schemas/Company_field'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific company field
      description: Only admins can delete company fields.
      tags:
      - Company Fields
      parameters:
      - $ref: '#/components/parameters/path_company_field_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /predefined_actions:
    get:
      summary: Get the list of predefined actions (for the logged API user's account)
      description: ''
      tags:
      - Predefined Actions
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      predefined_actions:
                        type: array
                        items:
                          properties:
                            predefined_action:
                              $ref: '#/components/schemas/Predefined_action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new predifined action
      description: ''
      tags:
      - Predefined Actions
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                text:
                  $ref: '#/components/schemas/Predefined_action/properties/text'
                days:
                  $ref: '#/components/schemas/Predefined_action/properties/days'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      predefined_action:
                        $ref: '#/components/schemas/Predefined_action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  '/predefined_actions/{predefined_action_id}':
    get:
      summary: Get a specific predefined action
      description: ''
      tags:
      - Predefined Actions
      parameters:
      - $ref: '#/components/parameters/path_predefined_action_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      predefined_action:
                        $ref: '#/components/schemas/Predefined_action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific predefined action
      description: ''
      tags:
      - Predefined Actions
      parameters:
      - $ref: '#/components/parameters/path_predefined_action_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                text:
                  $ref: '#/components/schemas/Predefined_action/properties/text'
                days:
                  $ref: '#/components/schemas/Predefined_action/properties/days'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      predefined_action:
                        $ref: '#/components/schemas/Predefined_action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific predefined action
      description: ''
      tags:
      - Predefined Actions
      parameters:
      - $ref: '#/components/parameters/path_predefined_action_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /notes:
    get:
      summary: Get a list of notes
      description: ''
      tags:
      - Notes
      parameters:
      - $ref: '#/components/parameters/query_notes_contact_id'
      - $ref: '#/components/parameters/query_notes_company_id'
      - $ref: '#/components/parameters/query_notes_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_notes_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      notes:
                        type: array
                        items:
                          properties:
                            note:
                              $ref: '#/components/schemas/Note'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new note
      description: ''
      tags:
      - Notes
      parameters: []
      requestBody:
        description: >-
          'contact_id' and 'text' are required when creating a note. If a date
          isn't provided, it will default to today's date. linked_deal_id is an
          optional param
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Note/properties/contact_id'
                text:
                  $ref: '#/components/schemas/Note/properties/text'
                date:
                  $ref: '#/components/schemas/Note/properties/date'
                user_ids_to_notify:
                  description: "An array of user ids to notify."
                  type: "array"
                  items:
                    example: "5aba31e99007ba0f570c12f7"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      note:
                        $ref: '#/components/schemas/Note'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /notes/{note_id}:
    get:
      summary: Get a specific note
      description: ''
      tags:
      - Notes
      parameters:
      - $ref: '#/components/parameters/path_note_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      note:
                        $ref: '#/components/schemas/Note'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific note
      description: ''
      tags:
      - Notes
      parameters:
      - $ref: '#/components/parameters/path_note_id'
      requestBody:
        description: >-
          'contact_id' and 'text' are required when create a note. If a date
          isn't provided, it will default to today's date. linked_deal_id is an
          optional param
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Note/properties/contact_id'
                text:
                  $ref: '#/components/schemas/Note/properties/text'
                date:
                  $ref: '#/components/schemas/Note/properties/date'
                user_ids_to_notify:
                  description: "An array of user ids to notify."
                  type: "array"
                  items:
                    example: "5aba31e99007ba0f570c12f7"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      note:
                        $ref: '#/components/schemas/Note'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific note
      description: ''
      tags:
      - Notes
      parameters:
      - $ref: '#/components/parameters/path_note_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /notes/{note_id}/attachments:
    post:
      summary: Create attachment and assign it to an existing note
      tags:
      - Notes
      description: >-
        Before creating an attachment, the file should be uploaded to S3. <br> <br>
        Make a request to `attachments/s3_form` for a pre-authorized upload form. <br>
        Following successful upload to S3, files can be attached via this endpoint. <br>
      parameters:
      - $ref: '#/components/parameters/path_note_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                reference_id:
                  type: string
                  description: >-
                    The ID of the note, call or deal associated with this
                    attachment. To associate to a new empty note: leave blank
                    and use `reference_type=note`. Similarly for calls/deals
                  example: 5afc1b69d556730b580596cb
                reference_type:
                  type: string
                  description: >-
                    What type of resource is associated with this attachment.
                  enum: [note, call, deal]
                  example: deal
                contact_id:
                  format: bson_id
                  type: string
                  description: Contact to be associated with the attachment
                  example: 5ae06ef9d55673108fe8877f
                name:
                  type: string
                  description: File name displayed to the user
                  example: mario.jpg
                key:
                  type: string
                  description: >-
                    This is the same key used in the attachments/s3_form. It is of the following form{contact_id}/{timestamp}/{filename}
                  example: 5b32511fbc906a40758ae1ee/1530520812224/mario.png
                external_url:
                  required: false
                  type: string
                  description: >-
                    External URL for the file
                link_type:
                  type: string
                  description: >-
                    Type of external link
                  enum: ['Dropbox', 'Google_drive', 'Evernote', '']
                  required: false
                  example: ''
                size:
                  type: integer
                  description: >-
                    Size of file
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      id:
                        type: string
                        description: Id of the note
                        example: 5afc1ea9d556730b780096db
                      storage_provider:
                        type: string
                        description: Where the attachment is stored
                        example: amazon
                      filename:
                        type: string
                        description: The filename of the attachment
                        example: mario.jpeg
                      url:
                        type: string
                        description: External URL for the file
                        example: 'https://{...}/mario.jpeg'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /calls:
    get:
      summary: Get a list of calls
      description: ''
      tags:
      - Calls
      parameters:
      - $ref: '#/components/parameters/query_calls_contact_id'
      - $ref: '#/components/parameters/query_calls_company_id'
      - $ref: '#/components/parameters/query_calls_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_calls_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      calls:
                        type: array
                        items:
                          properties:
                            call:
                              $ref: '#/components/schemas/Call'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a call
      description: ''
      tags:
      - Calls
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Call/properties/contact_id'
                call_time_int:
                  $ref: '#/components/schemas/Call/properties/call_time_int'
                text:
                  $ref: '#/components/schemas/Call/properties/text'
                phone_number:
                  $ref: '#/components/schemas/Call/properties/phone_number'
                call_result:
                  $ref: '#/components/schemas/Call/properties/call_result'
                via:
                  $ref: '#/components/schemas/Call/properties/via'
                recording_link:
                  $ref: '#/components/schemas/Call/properties/recording_link'
                user_ids_to_notify:
                  description: "An array of user ids to notify."
                  type: "array"
                  items:
                    example: "5aba31e99007ba0f570c12f7"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      call:
                        $ref: '#/components/schemas/Call'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /calls/{call_id}:
    get:
      summary: Get a specific call
      description: ''
      tags:
      - Calls
      parameters:
      - $ref: '#/components/parameters/path_call_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      call:
                        $ref: '#/components/schemas/Call'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific call
      description: ''
      tags:
      - Calls
      parameters:
      - $ref: '#/components/parameters/path_call_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Call/properties/contact_id'
                call_time_int:
                  $ref: '#/components/schemas/Call/properties/call_time_int'
                text:
                  $ref: '#/components/schemas/Call/properties/text'
                phone_number:
                  $ref: '#/components/schemas/Call/properties/phone_number'
                call_result:
                  $ref: '#/components/schemas/Call/properties/call_result'
                via:
                  $ref: '#/components/schemas/Call/properties/via'
                recording_link:
                  $ref: '#/components/schemas/Call/properties/recording_link'
                user_ids_to_notify:
                  description: "An array of user ids to notify."
                  type: "array"
                  items:
                    example: "5aba31e99007ba0f570c12f7"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      call:
                        $ref: '#/components/schemas/Call'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific call
      description: ''
      tags:
      - Calls
      parameters:
      - $ref: '#/components/parameters/path_call_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /calls/{call_id}/attachments:
    post:
      summary: Create attachment and assign it to an existing call
      description: >-
        Before creating an attachment, the file should be uploaded to S3. <br> <br>
        Make a request to `attachments/s3_form` for a pre-authorized upload form. <br>
        Following successful upload to S3, files can be attached via this endpoint. <br>
      tags:
      - Calls
      parameters:
      - $ref: '#/components/parameters/path_call_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                reference_id:
                  type: string
                  description: >-
                    The ID of the note, call or deal associated with this
                    attachment. To associate to a new empty note: leave blank
                    and use `reference_type=note`. Similarly for calls/deals
                  example: 5afc1b69d556730b580596cb
                reference_type:
                  type: string
                  description: >-
                    What type of resource is associated with this attachment.
                  enum: [note, call, deal]
                  example: deal
                contact_id:
                  format: bson_id
                  type: string
                  description: Contact to be associated with the attachment
                  example: 5ae06ef9d55673108fe8877f
                name:
                  type: string
                  description: File name displayed to the user
                  example: mario.jpg
                key:
                  type: string
                  description: >-
                    This is the same key used in the attachments/s3_form. It is of the following form{contact_id}/{timestamp}/{filename}
                  example: 5b32511fbc906a40758ae1ee/1530520812224/mario.png
                external_url:
                  required: false
                  type: string
                  description: >-
                    External URL for the file
                link_type:
                  type: string
                  description: >-
                    Type of external link
                  enum: ['Dropbox', 'Google_drive', 'Evernote', '']
                  required: false
                  example: ''
                size:
                  type: integer
                  description: >-
                    Size of file
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      id:
                        type: string
                        description: Id of the note
                        example: 5afc1ea9d556730b780096db
                      storage_provider:
                        type: string
                        description: Where the attachment is stored
                        example: amazon
                      filename:
                        type: string
                        description: The filename of the attachment
                        example: mario.jpeg
                      url:
                        type: string
                        description: External URL for the file
                        example: 'https://{...}/mario.jpeg'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /call_results:
    get:
      summary: Get the list of call results (for the logged API user's account)
      description: >-
        Includes: <br>
        -> The call results for the account. <br>
        -> The counts of their usages for the logged API user, and their team. <br>
      tags:
      - Calls
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    type: array
                    items:
                      properties:
                        call_result:
                          properties:
                            result:
                              type: string
                              example: interested
                              description: id of the call result
                            text:
                              type: string
                              example: Interested
                              description: Display name of the call result
                            counts:
                              type: integer
                              example: 5
                              description: >-
                                The number of this users calls with this call
                                result.
                            total_counts:
                              type: integer
                              example: 5
                              description: The total number of calls with this call result
                            team_counts:
                              description: >-
                                Number of calls with this call results grouped
                                by user
                              type: array
                              items:
                                properties:
                                  user_id:
                                    description: ID of one ot the API user’s team members
                                    type: string
                                    example: 5aba31e99007ba0f570c12f7
                                  counts:
                                    description: >-
                                      Number of calls that the user with user_id
                                      has with this call result
                                    type: integer
                                    example: 4
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /deals:
    get:
      summary: Get a list of deals
      description: ''
      tags:
      - Deals
      parameters:
      - $ref: '#/components/parameters/query_deals_name'
      - $ref: '#/components/parameters/query_deals_search'
      - $ref: '#/components/parameters/query_deals_status'
      - $ref: '#/components/parameters/query_stage'
      - $ref: '#/components/parameters/query_deals_owner_id'
      - $ref: '#/components/parameters/query_deals_contact_id'
      - $ref: '#/components/parameters/query_deals_company_id'
      - $ref: '#/components/parameters/query_deals_tag'
      - $ref: '#/components/parameters/query_deals_filter_id'
      - $ref: '#/components/parameters/query_deals_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_deals_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deals:
                        type: array
                        items:
                          properties:
                            deal:
                              $ref: '#/components/schemas/Deal'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new deal
      description: ''
      tags:
      - Deals
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Deal/properties/contact_id'
                name:
                  $ref: '#/components/schemas/Deal/properties/name'
                text:
                  $ref: '#/components/schemas/Deal/properties/text'
                owner_id:
                  $ref: '#/components/schemas/Deal/properties/owner_id'
                amount:
                  $ref: '#/components/schemas/Deal/properties/amount'
                months:
                  $ref: '#/components/schemas/Deal/properties/months'
                date:
                  $ref: '#/components/schemas/Deal/properties/date'
                status:
                  $ref: '#/components/schemas/Deal/properties/status'
                stage:
                  $ref: '#/components/schemas/Deal/properties/stage'
                deal_fields:
                  $ref: '#/components/schemas/Deal/properties/deal_fields'
                expected_close_date:
                  $ref: '#/components/schemas/Deal/properties/expected_close_date'
                close_date:
                  $ref: '#/components/schemas/Deal/properties/close_date'
                cost:
                  $ref: '#/components/schemas/Deal/properties/cost'
                commission:
                  $ref: '#/components/schemas/Deal/properties/commission'
                commission_percentage:
                  $ref: '#/components/schemas/Deal/properties/commission_percentage'
                commission_type:
                  $ref: '#/components/schemas/Deal/properties/commission_type'
                commission_base:
                  $ref: '#/components/schemas/Deal/properties/commission_base'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deal:
                        $ref: '#/components/schemas/Deal'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /deals/{deal_id}:
    get:
      summary: Get a specific deal
      description: ''
      tags:
      - Deals
      parameters:
      - $ref: '#/components/parameters/path_deal_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deal:
                        $ref: '#/components/schemas/Deal'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific deal
      description: ''
      tags:
      - Deals
      parameters:
      - $ref: '#/components/parameters/path_deal_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Deal/properties/contact_id'
                name:
                  $ref: '#/components/schemas/Deal/properties/name'
                text:
                  $ref: '#/components/schemas/Deal/properties/text'
                owner_id:
                  $ref: '#/components/schemas/Deal/properties/owner_id'
                amount:
                  $ref: '#/components/schemas/Deal/properties/amount'
                months:
                  $ref: '#/components/schemas/Deal/properties/months'
                date:
                  $ref: '#/components/schemas/Deal/properties/date'
                status:
                  $ref: '#/components/schemas/Deal/properties/status'
                stage:
                  $ref: '#/components/schemas/Deal/properties/stage'
                deal_fields:
                  $ref: '#/components/schemas/Deal/properties/deal_fields'
                expected_close_date:
                  $ref: '#/components/schemas/Deal/properties/expected_close_date'
                close_date:
                  $ref: '#/components/schemas/Deal/properties/close_date'
                cost:
                  $ref: '#/components/schemas/Deal/properties/cost'
                commission:
                  $ref: '#/components/schemas/Deal/properties/commission'
                commission_percentage:
                  $ref: '#/components/schemas/Deal/properties/commission_percentage'
                commission_type:
                  $ref: '#/components/schemas/Deal/properties/commission_type'
                commission_base:
                  $ref: '#/components/schemas/Deal/properties/commission_base'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deal:
                        $ref: '#/components/schemas/Deal'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific deal
      description: >-
        Note: only users with the `delete_deals` permission can delete deals.
      tags:
      - Deals
      parameters:
      - $ref: '#/components/parameters/path_deal_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /deals/{deal_id}/attachments:
    post:
      summary: Create attachment and assign it to an existing deal
      description: >-
        Before creating an attachment, the file should be uploaded to S3. <br>
        Make a request to `attachments/s3_form` for a pre-authorized upload form. <br>
        Following successful upload to S3, files can be attached via this endpoint. <br>
      tags:
      - Deals
      parameters:
      - $ref: '#/components/parameters/path_deal_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                reference_id:
                  type: string
                  description: >-
                    The ID of the note, call or deal associated with this
                    attachment. To associate to a new empty note: leave blank
                    and use `reference_type=note`. Similarly for calls/deals
                  example: 5afc1b69d556730b580596cb
                reference_type:
                  type: string
                  description: >-
                    What type of resource is associated with this attachment.
                  enum: [note, call, deal]
                  example: deal
                contact_id:
                  format: bson_id
                  type: string
                  description: Contact to be associated with the attachment
                  example: 5ae06ef9d55673108fe8877f
                name:
                  type: string
                  description: File name displayed to the user
                  example: mario.jpg
                key:
                  type: string
                  description: >-
                    This is the same key used in the attachments/s3_form. It is of the following form{contact_id}/{timestamp}/{filename}
                  example: 5b32511fbc906a40758ae1ee/1530520812224/mario.png
                external_url:
                  required: false
                  type: string
                  description: >-
                    External URL for the file
                link_type:
                  type: string
                  description: >-
                    Type of external link
                  enum: ['Dropbox', 'Google_drive', 'Evernote', '']
                  required: false
                  example: ''
                size:
                  type: integer
                  description: >-
                    Size of file
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      id:
                        type: string
                        description: Id of the note
                        example: 5afc1ea9d556730b780096db
                      storage_provider:
                        type: string
                        description: Where the attachment is stored
                        example: amazon
                      filename:
                        type: string
                        description: The filename of the attachment
                        example: mario.jpeg
                      url:
                        type: string
                        description: External URL for the file
                        example: 'https://{...}/mario.jpeg'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /attachments/s3_form:
    get:
      summary: >-
        Get a pre-authorized S3 upload form (use to upload a file on the client side)
      description: >-
        Files must be uploaded to S3 before they can be attached to Deals, Notes or Calls. <br>
        This request will return all the information needed to upload a file to S3. <br> <br>

        Steps to upload a file to S3: <br>
        -> Make a `POST` request to the `url` in the response (to this request). <br>
        -> Include all the params returned as part of the `fields` construct in the response. <br>
        -> These should be sent as headers of the upload request to S3. <br>
        -> Most can be sent as they are, but the `key` field must be constructed. <br>
        -> `"key":"{contact_id}/{timestamp}/{filename}"` <br>
        -> `filename` field must be present (and the same as the `filename` specified at the end of the `key` field). <br>
        -> `file` is the file to upload. <br> <br>

        Following successful upload to S3, files may now be attached to Deals, Notes or Calls. <br> <br>

        Notes: <br>
        -> Maximum file size is 10 MB / 10485760 bytes. <br>
        -> Each account has 1 GB of storage per user. <br>
        -> Here's some additional information on the
        <a target="_blank" href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-post-example.html">
        upload process</a>. <br>
      tags:
      - Attachments
      parameters:
      - in: query
        name: contact_id
        required: true
        schema:
          type: string
        description: Contact to be associated with the attachment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      quota:
                        example: 1073741824
                      display_quota:
                        example: 1024MB
                      url:
                        example: >-
                          https://s3-us-west-1.amazonaws.com/onepagecrm-ud2-us-west-1/
                      fields:
                        properties:
                          key:
                            example: ''
                          x-ignore-pattern:
                            example: '59bacde236aebd7842f8be7x/__timestamp__/${filename}'
                          acl:
                            example: private
                          success_action_status:
                            example: 201
                          policy:
                            example: aBcDe...aBcDe=
                          x-amz-algorithm:
                            example: AWS4-HMAC-SHA256
                          x-amz-credential:
                            example: ABCDE...ABCDE/20170914/us-west-1/s3/aws4_request
                          x-amz-date:
                            example: 20170914T184346Z
                          x-amz-signature:
                            example: aBcDe...aBcDe
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /attachments:
    post:
      summary: Create a new attachment
      description: >-
        Before creating an attachment, the file should be uploaded to S3. <br> <br>
        Make a request to `attachments/s3_form` for a pre-authorized upload form. <br>
        Following successful upload to S3, files can be attached via this endpoint. <br> <br>
        Note: file attachments are supported by Deals, Notes and Calls. <br>
      tags:
      - Attachments
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                reference_id:
                  type: string
                  description: >-
                    The ID of the note, call or deal associated with this
                    attachment. To associate to a new empty note: leave blank
                    and use 'reference_type=note'. Similarly for calls/deals
                  example: 5afc1b69d556730b580596cb
                reference_type:
                  type: string
                  description: >-
                    What type of resource is associated with this attachment.
                  enum: [note, call, deal]
                  example: deal
                contact_id:
                  format: bson_id
                  type: string
                  description: Contact to be associated with the attachment
                  example: 5ae06ef9d55673108fe8877f
                name:
                  type: string
                  description: File name displayed to the user
                  example: mario.jpg
                key:
                  type: string
                  description: >-
                    This is the same key used in the attachments/s3_form. It is of the following form{contact_id}/{timestamp}/{filename}
                  example: 5b32511fbc906a40758ae1ee/1530520812224/mario.png
                external_url:
                  required: false
                  type: string
                  description: >-
                    External URL for the file
                link_type:
                  type: string
                  description: >-
                    Type of external link
                  enum: ['Dropbox', 'Google_drive', 'Evernote', '']
                  required: false
                  example: ''
                size:
                  type: integer
                  description: >-
                    Size of file

        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      attachment:
                        $ref: '#/components/schemas/Attachment'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  '/attachments/{attachment_id}':
    delete:
      summary: Delete a specific attachment
      description: ''
      tags:
      - Attachments
      parameters:
      - $ref: '#/components/parameters/path_attachment_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /countries:
    get:
      summary: Get the list of all compatible countries
      description: >-
        A read-only list of all compatible countries, alpha sorted based on their ISO-3166 country codes. <br>
      tags:
      - Countries
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  name:
                    description: 'Country name '
                    type: string
                    example: Ireland
                  code:
                    description: ISO code
                    type: string
                    example: IE
                  phone_prefix:
                    description: Phone Prefix
                    type: string
                    example: '+353'
  /actions:
    get:
      summary: Get a list of actions
      description: >-
        Default sort order: <br>
        -> ASAP first <br>
        -> Dated actions (ordered by due date, overdue first) <br>
        -> Waiting for (blocked) <br>
        -> Queued actions (without any date) <br>
        -> Completed actions <br>
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/query_done'
      - $ref: '#/components/parameters/query_actions_status'
      - $ref: '#/components/parameters/query_assignee_id'
      - $ref: '#/components/parameters/query_actions_contact_id'
      - $ref: '#/components/parameters/query_actions_company_id'
      - $ref: '#/components/parameters/query_actions_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      actions:
                        type: array
                        items:
                          properties:
                            action:
                              $ref: '#/components/schemas/Action'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a new action
      description: ''
      tags:
      - Actions
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Action/properties/contact_id'
                assignee_id:
                  $ref: '#/components/schemas/Action/properties/assignee_id'
                status:
                  $ref: '#/components/schemas/Action/properties/status'
                text:
                  $ref: '#/components/schemas/Action/properties/text'
                date:
                  $ref: '#/components/schemas/Action/properties/date'
                exact_time:
                  $ref: '#/components/schemas/Action/properties/exact_time'
                position:
                  $ref: '#/components/schemas/Action/properties/position'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /actions/{action_id}:
    get:
      summary: Get a specific action
      description: ''
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific action
      description: ''
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      - name: done
        in: query
        required: false
        description: Mark the action as completed
        schema:
          type: boolean
          example: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Action/properties/contact_id'
                assignee_id:
                  $ref: '#/components/schemas/Action/properties/assignee_id'
                status:
                  $ref: '#/components/schemas/Action/properties/status'
                text:
                  $ref: '#/components/schemas/Action/properties/text'
                date:
                  $ref: '#/components/schemas/Action/properties/date'
                exact_time:
                  $ref: '#/components/schemas/Action/properties/exact_time'
                position:
                  $ref: '#/components/schemas/Action/properties/position'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific action
      description: >-
        Note: you can only delete actions which are queued, or have been marked as done.
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /actions/{action_id}/unassign:
    put:
      summary: Unassign a specific action (from the currently assigned user)
      description: >-
        Note: leaving `assignee_id` blank will assign this action to the logged API user.
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /actions/{action_id}/mark_as_done:
    put:
      summary: Mark a specific action as complete
      description: ''
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /actions/{action_id}/undo_completion:
    put:
      summary: Undo action completion
      description: ''
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /actions/{action_id}/promote:
    put:
      summary: Specify action to be promoted as the logged API user's next action
      description: >-
        Only use this method if there is no next action already assigned, otherwise see similar `swap` request. <br>
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /actions/{action_id}/revert_promotion:
    put:
      summary: Undo action promotion
      description:
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /actions/{action_id}/swap:
    put:
      summary: >-
        Specify action to be swapped in as the logged API user's next action
      description: >-
        Resolve date conflicts between next action and dated queued action by swapping them. <br> <br>
        The swap should consist of: <br>
        -> A next action of status `date`, `date_time` or `waiting` <br>
        -> A queued action of status `queued_with_date` <br> <br>
        Both actions should be for the current user,
        and the date for the queued action should be before the date of the next action. <br>
      tags:
      - Actions
      parameters:
      - $ref: '#/components/parameters/path_action_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /filters:
    get:
      summary: Get the list of custom filters (for the logged API user's account)
      description: ''
      tags:
      - Filters
      parameters:
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      filters:
                        type: array
                        items:
                          properties:
                            filter:
                              $ref: '#/components/schemas/Filter'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /filters/{filter_id}:
    get:
      summary: Get a specific custom filter
      description: >-
        This endpoint returns all contacts that meet the conditions of the specific filter.
      tags:
      - Filters
      parameters:
      - $ref: '#/components/parameters/path_filter_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      filter:
                        $ref: '#/components/schemas/Filter'
                      contacts:
                        type: array
                        items:
                          properties:
                            contact:
                              $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /companies:
    get:
      summary: Get a list of companies
      description: Defaults sorting is company name alpha.
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/query_companies_name'
      - $ref: '#/components/parameters/query_companies_phone'
      - $ref: '#/components/parameters/query_companies_letter'
      - $ref: '#/components/parameters/query_companies_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      companies:
                        type: array
                        items:
                          properties:
                            company:
                              $ref: '#/components/schemas/Company'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /companies/{company_id}:
    get:
      summary: Get a specific company
      description:
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      company:
                        $ref: '#/components/schemas/Company'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific company
      description: >-
        Note: when updating a company field, either the `id` or `name` and the `value` must be present.
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/Company/properties/name'
                description:
                  $ref: '#/components/schemas/Company/properties/description'
                url:
                  $ref: '#/components/schemas/Company/properties/url'
                phone:
                  $ref: '#/components/schemas/Company/properties/phone'
                address:
                  $ref: '#/components/schemas/Company/properties/address'
                company_fields:
                  type: array
                  items:
                    properties:
                      id:
                        $ref: '#/components/schemas/Company_field/properties/id'
                      name:
                        $ref: '#/components/schemas/Company_field/properties/name'
                      value:
                        example: "big"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      company:
                        $ref: '#/components/schemas/Company'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /companies/{company_id}/actions:
    get:
      summary: Get actions associated with a specific company
      description: ''
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      - $ref: '#/components/parameters/query_done'
      - $ref: '#/components/parameters/query_actions_status'
      - $ref: '#/components/parameters/query_assignee_id'
      - $ref: '#/components/parameters/query_actions_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      actions:
                        type: array
                        items:
                          properties:
                            action:
                              $ref: '#/components/schemas/Action'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /companies/{company_id}/deals:
    get:
      summary: Get deals associated with a specific company
      description: ''
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      - $ref: '#/components/parameters/query_deals_name'
      - $ref: '#/components/parameters/query_deals_search'
      - $ref: '#/components/parameters/query_deals_status'
      - $ref: '#/components/parameters/query_stage'
      - $ref: '#/components/parameters/query_deals_owner_id'
      - $ref: '#/components/parameters/query_deals_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_deals_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deals:
                        type: array
                        items:
                          properties:
                            deal:
                              $ref: '#/components/schemas/Deal'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /companies/{company_id}/notes:
    get:
      summary: Get notes associated with a specific company
      description: ''
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      - $ref: '#/components/parameters/query_notes_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_notes_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      notes:
                        type: array
                        items:
                          properties:
                            note:
                              $ref: '#/components/schemas/Note'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /companies/{company_id}/calls:
    get:
      summary: Get calls associated with a specific company
      description: ''
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      - $ref: '#/components/parameters/query_calls_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_calls_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      calls:
                        type: array
                        items:
                          properties:
                            call:
                              $ref: '#/components/schemas/Call'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  '/companies/{company_id}/linked_contacts':
    get:
      summary: Get contacts linked with a specific company
      description: ''
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      - $ref: '#/components/parameters/query_contacts_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      linked_contacts:
                        type: array
                        items:
                          properties:
                            linked_contact:
                              properties:
                                contact:
                                  $ref: '#/components/schemas/Contact'
                                next_actions:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Action'
                                next_action:
                                  $ref: '#/components/schemas/Action'
                                queued_actions:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Action'
                                queued_action_conflicts:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Action'
                                company:
                                  $ref: '#/components/schemas/Company'
                                linked_with:
                                  type: array
                                  items:
                                    example: 5aba31e99007ba0f570c92ab
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Link a contact to a specific company
      description: >-
        Notes: <br>
        -> Cannot link a contact to the company they already work at. <br>
        -> A company is not allowed to have more than 100 linked contacts. <br>
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  description: The id of the contact to link with this company
                  type: string
                  example: 5ae06ef9d55673108fe8877b
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      linked_contact:
                        properties:
                          contact:
                            $ref: '#/components/schemas/Contact'
                          next_actions:
                            type: array
                            items:
                              $ref: '#/components/schemas/Action'
                          next_action:
                            $ref: '#/components/schemas/Action'
                          queued_actions:
                            type: array
                            items:
                              $ref: '#/components/schemas/Action'
                          queued_action_conflicts:
                            type: array
                            items:
                              $ref: '#/components/schemas/Action'
                          company:
                            $ref: '#/components/schemas/Company'
                          linked_with:
                            type: array
                            items:
                              example: 5aba31e99007ba0f570c92ab
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  '/companies/{company_id}/linked_contacts/{contact_id}':
    delete:
      summary: Unlink a contact from a company
      description: ''
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      - name: contact_id
        in: path
        required: true
        description: Contact to unlink from company
        schema:
          type: string
          minimum: 1
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  '/companies/{company_id}/synced_status':
    post:
      summary: Enable company status sync
      description: >-
        Turns on sync so that all contacts in the specified company will have the same status. <br>
        An initial `status_id` must be provided in the request body. <br> <br>
        Note: the statuses of this company's contacts will remain in sync, until sync is disabled for this company. <br>
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                status_id:
                  $ref: '#/components/schemas/Status/properties/id'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      company:
                        $ref: '#/components/schemas/Company'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Disable company status sync
      description:
      tags:
      - Companies
      parameters:
      - $ref: '#/components/parameters/path_company_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      company:
                        $ref: '#/components/schemas/Company'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts:
    get:
      summary: Get a list of contacts
      description: Defaults to contacts owned by the logged user, alpha sorted.
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/query_team'
      # Search field values
      - $ref: '#/components/parameters/query_contacts_search'
      - $ref: '#/components/parameters/query_contacts_phone'
      - $ref: '#/components/parameters/query_url'
      # Boolean flags/filters
      - $ref: '#/components/parameters/query_action_stream'
      - $ref: '#/components/parameters/query_has_actions'
      - $ref: '#/components/parameters/query_has_actions_for_me'
      - $ref: '#/components/parameters/query_has_actions_today'
      - $ref: '#/components/parameters/query_pending_deal'
      - $ref: '#/components/parameters/query_starred'
      - $ref: '#/components/parameters/query_waiting'
      # Related value constraints
      - $ref: '#/components/parameters/query_email'
      - $ref: '#/components/parameters/query_contacts_letter'
      - $ref: '#/components/parameters/query_custom_field_id'
      - $ref: '#/components/parameters/query_custom_field_value'
      - $ref: '#/components/parameters/query_lead_source'
      - $ref: '#/components/parameters/query_lead_source_id'
      - $ref: '#/components/parameters/query_status_id'
      - $ref: '#/components/parameters/query_not_linked_with'
      - $ref: '#/components/parameters/query_contacts_owner_id'
      - $ref: '#/components/parameters/query_contacts_company_id'
      - $ref: '#/components/parameters/query_contacts_tag'
      - $ref: '#/components/parameters/query_contacts_filter_id'
      # Date filters
      - $ref: '#/components/parameters/query_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      # Sort order
      - $ref: '#/components/parameters/query_contacts_sort_by'
      - $ref: '#/components/parameters/query_order'
      # Pagination
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contacts:
                        type: array
                        items:
                          properties:
                            contact:
                              $ref: '#/components/schemas/Contact'
                            next_actions:
                              type: array
                              items:
                                $ref: '#/components/schemas/Action'
                            next_action:
                              $ref: '#/components/schemas/Action'
                            queued_actions:
                              type: array
                              items:
                                $ref: '#/components/schemas/Action'
                            queued_action_conflicts:
                              type: array
                              items:
                                $ref: '#/components/schemas/Action'
                            company:
                              $ref: '#/components/schemas/Company'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Maximum number of items shown on per page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
                      lead_sources:
                        type: array
                        items:
                          $ref: '#/components/schemas/Lead_source'
                      statuses:
                        type: array
                        items:
                          $ref: '#/components/schemas/Status'
                      tags:
                        description: >-
                          Tags provide a means to classify contacts by however
                          many tags you choose to attach to them. There are 2
                          types of tags, tags and system tags
                        properties:
                          tags:
                            description: >-
                              An array of custom tags. A custom tag is a user
                              created tag used for categorising contacts
                            type: array
                            items:
                              $ref: '#/components/schemas/Tag'
                          system_tags:
                            description: >-
                              An array of system tags. A system tag is a system
                              generate tag used for categorising contacts
                            type: array
                            items:
                              $ref: '#/components/schemas/Tag'
                      contacts_count:
                        $ref: '#/components/schemas/Contacts_count'
                      team_stream:
                        $ref: '#/components/schemas/Team_stream'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a contact
      description: ''
      tags:
      - Contacts
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  $ref: '#/components/schemas/Contact/properties/title'
                first_name:
                  $ref: '#/components/schemas/Contact/properties/first_name'
                last_name:
                  $ref: '#/components/schemas/Contact/properties/last_name'
                job_title:
                  $ref: '#/components/schemas/Contact/properties/job_title'
                owner_id:
                  $ref: '#/components/schemas/Contact/properties/owner_id'
                company_id:
                  $ref: '#/components/schemas/Contact/properties/company_id'
                company_name:
                  $ref: '#/components/schemas/Contact/properties/company_name'
                background:
                  $ref: '#/components/schemas/Contact/properties/background'
                status_id:
                  $ref: '#/components/schemas/Contact/properties/status_id'
                lead_source_id:
                  $ref: '#/components/schemas/Lead_source/properties/id'
                address_list:
                  $ref: '#/components/schemas/Contact/properties/address_list'
                phones:
                  $ref: '#/components/schemas/Contact/properties/phones'
                urls:
                  $ref: '#/components/schemas/Contact/properties/url'
                emails:
                  $ref: '#/components/schemas/Contact/properties/emails'
                tags:
                  $ref: '#/components/schemas/Contact/properties/tags'
                custom_fields:
                  type: array
                  items:
                    properties:
                      name:
                        $ref: '#/components/schemas/Custom_field/properties/name'
                      type:
                        $ref: '#/components/schemas/Custom_field/properties/type'
                      value:
                        example: Winter
                starred:
                  $ref: '#/components/schemas/Contact/properties/starred'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
                      next_actions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      next_action:
                        $ref: '#/components/schemas/Action'
                      queued_actions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      queued_action_conflicts:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      company:
                        $ref: '#/components/schemas/Company'
                  lead_sources:
                    items:
                      $ref: '#/components/schemas/Lead_source'
                  statuses:
                    items:
                      $ref: '#/components/schemas/Status'
                  tags:
                    description: >-
                      Tags provide a means to classify contacts by however many
                      tags you choose to attach to them. There are 2 types of
                      tags, tags and system tags
                    properties:
                      tags:
                        description: >-
                          An array of custom tags. A custom tag is a user
                          created tag used for categorising contacts
                        type: array
                        items:
                          $ref: '#/components/schemas/Tag'
                      system_tags:
                        description: >-
                          An array of system tags. A system tag is a system
                          generate tag used for categorising contacts
                        type: array
                        items:
                          $ref: '#/components/schemas/Tag'
                  contacts_count:
                    $ref: '#/components/schemas/Contacts_count'
                  team_stream:
                    $ref: '#/components/schemas/Team_stream'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}:
    get:
      summary: Get a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
                      next_actions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      next_action:
                        $ref: '#/components/schemas/Action'
                      queued_actions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      queued_action_conflicts:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      company:
                        $ref: '#/components/schemas/Company'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a specific contact
      description: >-
        Note: when updating a custom field, either the `id` or `name` and the `value` must be present.
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  $ref: '#/components/schemas/Contact/properties/title'
                first_name:
                  $ref: '#/components/schemas/Contact/properties/first_name'
                last_name:
                  $ref: '#/components/schemas/Contact/properties/last_name'
                job_title:
                  $ref: '#/components/schemas/Contact/properties/job_title'
                owner_id:
                  $ref: '#/components/schemas/Contact/properties/owner_id'
                company_id:
                  $ref: '#/components/schemas/Contact/properties/company_id'
                company_name:
                  $ref: '#/components/schemas/Contact/properties/company_name'
                background:
                  $ref: '#/components/schemas/Contact/properties/background'
                status_id:
                  $ref: '#/components/schemas/Contact/properties/status_id'
                lead_source_id:
                  $ref: '#/components/schemas/Lead_source/properties/id'
                address_list:
                  $ref: '#/components/schemas/Contact/properties/address_list'
                phones:
                  $ref: '#/components/schemas/Contact/properties/phones'
                urls:
                  $ref: '#/components/schemas/Contact/properties/url'
                emails:
                  $ref: '#/components/schemas/Contact/properties/emails'
                tags:
                  $ref: '#/components/schemas/Contact/properties/tags'
                custom_fields:
                  type: array
                  items:
                    properties:
                      id:
                        $ref: '#/components/schemas/Custom_field/properties/id'
                      name:
                        $ref: '#/components/schemas/Custom_field/properties/name'
                      value:
                        example: Winter
                starred:
                  $ref: '#/components/schemas/Contact/properties/starred'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
                      next_actions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      next_action:
                        $ref: '#/components/schemas/Action'
                      queued_actions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      queued_action_conflicts:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      company:
                        $ref: '#/components/schemas/Company'
                  lead_sources:
                    items:
                      $ref: '#/components/schemas/Lead_source'
                  statuses:
                    items:
                      $ref: '#/components/schemas/Status'
                  tags:
                    description: >-
                      Tags provide a means to classify contacts by however many
                      tags you choose to attach to them. There are 2 types of
                      tags, tags and system tags
                    properties:
                      tags:
                        description: >-
                          An array of custom tags. A custom tag is a user
                          created tag used for categorising contacts
                        type: array
                        items:
                          $ref: '#/components/schemas/Tag'
                      system_tags:
                        description: >-
                          An array of system tags. A system tag is a system
                          generate tag used for categorising contacts
                        type: array
                        items:
                          $ref: '#/components/schemas/Tag'
                  contacts_count:
                    $ref: '#/components/schemas/Contacts_count'
                  team_stream:
                    $ref: '#/components/schemas/Team_stream'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a specific contact
      description: >-
        Note: only users with the `delete_contacts` permission can delete contacts.
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - in: query
        name: undo
        description: Undo Contact deletion
        schema:
          type: boolean
          format: boolean
          example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data: {}
                  lead_sources:
                    items:
                      $ref: '#/components/schemas/Lead_source'
                  statuses:
                    items:
                      $ref: '#/components/schemas/Status'
                  tags:
                    description: >-
                      Tags provide a means to classify contacts by however many
                      tags you choose to attach to them. There are 2 types of
                      tags, tags and system tags
                    properties:
                      tags:
                        description: >-
                          An array of custom tags. A custom tag is a user
                          created tag used for categorising contacts
                        type: array
                        items:
                          $ref: '#/components/schemas/Tag'
                      system_tags:
                        description: >-
                          An array of system tags. A system tag is a system
                          generate tag used for categorising contacts
                        type: array
                        items:
                          $ref: '#/components/schemas/Tag'
                  contacts_count:
                    $ref: '#/components/schemas/Contacts_count'
                  team_stream:
                    $ref: '#/components/schemas/Team_stream'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/contact_photo:
    post:
      summary: Add a new contact photo
      description: >-
        Use this endpoint to add a new photo to an existing contact. <br> <br>
        It takes a parameter `image`, which must be a Base64 encoded string of the image data. <br>
        Images will be cropped to a centered square and resized to 200x200 pixels. <br>
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                image:
                  example: '{A base64 encoded jpg or png image}'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Update a contact's photo
      description: >
        Use this endpoint to add a new photo to an existing contact. <br> <br>
        It takes a parameter `image`, which must be a Base64 encoded string of the image data. <br>
        Images will be cropped to a centered square and resized to 200x200 pixels. <br> <br>
        Note: updating a contact photo will remove the existing photo! <br>
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                image:
                  example: '{A base64 encoded jpg or png image}'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Remove a contact's photo
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/filters/{filter_id}:
    get:
      summary: Show contacts that meet the criteria of a filter
      description: ""
      tags:
      - "Contacts"
      parameters:
      - $ref: '#/components/parameters/path_filter_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      filter:
                        $ref: '#/components/schemas/Filter'
                      contacts:
                        type: array
                        items:
                          properties:
                            contact:
                              $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/delete:
    delete:
      summary: Delete multiple contacts
      description: ""
      tags:
      - "Contacts"
      parameters:
      - name: "ids"
        in: "query"
        required: true
        description: Comma seperated list of contact ids to delete
        schema:
          type: string
          minimum: 1
      responses:
        200:
          description: OK
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/google_contacts:
    post:
      summary: Save a specific OnePageCRM contact to Google Contacts
      description: >-
        OnePageCRM must be authorized to save contacts to Google Contacts on your behalf, in order to complete this request. <br>
        Please visit
        <a target="_blank" href="https://app.onepagecrm.com/app/google_contacts">our integration page</a>
        to authorize, or
        <a target="_blank" href="https://help.onepagecrm.com/article/370-how-to-save-contacts-to-google-contacts-from-onepagecrm">our help article</a>
        for more information. <br>
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
                      next_actions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      next_action:
                        $ref: '#/components/schemas/Action'
                      queued_actions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      next_action_conflicts:
                        type: array
                        items:
                          $ref: '#/components/schemas/Action'
                      company:
                        $ref: '#/components/schemas/Company'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/actions:
    get:
      summary: Get all actions for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - $ref: '#/components/parameters/query_done'
      - $ref: '#/components/parameters/query_actions_status'
      - $ref: '#/components/parameters/query_assignee_id'
      - $ref: '#/components/parameters/query_actions_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      actions:
                        type: array
                        items:
                          properties:
                            action:
                              $ref: '#/components/schemas/Action'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create an action for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                assignee_id:
                  $ref: '#/components/schemas/Action/properties/assignee_id'
                status:
                  $ref: '#/components/schemas/Action/properties/status'
                text:
                  $ref: '#/components/schemas/Action/properties/text'
                date:
                  $ref: '#/components/schemas/Action/properties/date'
                exact_time:
                  $ref: '#/components/schemas/Action/properties/exact_time'
                position:
                  $ref: '#/components/schemas/Action/properties/position'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      action:
                        $ref: '#/components/schemas/Action'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/deals:
    get:
      summary: Get all deals for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - $ref: '#/components/parameters/query_deals_name'
      - $ref: '#/components/parameters/query_deals_search'
      - $ref: '#/components/parameters/query_deals_status'
      - $ref: '#/components/parameters/query_stage'
      - $ref: '#/components/parameters/query_deals_owner_id'
      - $ref: '#/components/parameters/query_deals_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_deals_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deals:
                        type: array
                        items:
                          properties:
                            deal:
                              $ref: '#/components/schemas/Deal'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a deal for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Deal/properties/contact_id'
                name:
                  $ref: '#/components/schemas/Deal/properties/name'
                text:
                  $ref: '#/components/schemas/Deal/properties/text'
                owner_id:
                  $ref: '#/components/schemas/Deal/properties/owner_id'
                amount:
                  $ref: '#/components/schemas/Deal/properties/amount'
                months:
                  $ref: '#/components/schemas/Deal/properties/months'
                date:
                  $ref: '#/components/schemas/Deal/properties/date'
                status:
                  $ref: '#/components/schemas/Deal/properties/status'
                stage:
                  $ref: '#/components/schemas/Deal/properties/stage'
                deal_fields:
                  $ref: '#/components/schemas/Deal/properties/deal_fields'
                expected_close_date:
                  $ref: '#/components/schemas/Deal/properties/expected_close_date'
                close_date:
                  $ref: '#/components/schemas/Deal/properties/close_date'
                cost:
                  $ref: '#/components/schemas/Deal/properties/cost'
                commission:
                  $ref: '#/components/schemas/Deal/properties/commission'
                commission_percentage:
                  $ref: '#/components/schemas/Deal/properties/commission_percentage'
                commission_type:
                  $ref: '#/components/schemas/Deal/properties/commission_type'
                commission_base:
                  $ref: '#/components/schemas/Deal/properties/commission_base'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      deal:
                        $ref: '#/components/schemas/Deal'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/notes:
    get:
      summary: Get all notes for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - $ref: '#/components/parameters/query_notes_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_notes_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      notes:
                        type: array
                        items:
                          properties:
                            note:
                              $ref: '#/components/schemas/Note'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a note for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        description: >-
          'contact_id' and 'text' are required when create a note. If a date
          isn't provided, it will default to today's date. linked_deal_id is an
          optional param
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Note/properties/contact_id'
                text:
                  $ref: '#/components/schemas/Note/properties/text'
                date:
                  $ref: '#/components/schemas/Note/properties/date'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      note:
                        $ref: '#/components/schemas/Note'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/calls:
    get:
      summary: Get all calls for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - $ref: '#/components/parameters/query_calls_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      - $ref: '#/components/parameters/query_calls_sort_by'
      - $ref: '#/components/parameters/query_order'
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      calls:
                        type: array
                        items:
                          properties:
                            call:
                              $ref: '#/components/schemas/Call'
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Create a call for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contact_id:
                  $ref: '#/components/schemas/Call/properties/contact_id'
                call_time_int:
                  $ref: '#/components/schemas/Call/properties/call_time_int'
                text:
                  $ref: '#/components/schemas/Call/properties/text'
                phone_number:
                  $ref: '#/components/schemas/Call/properties/phone_number'
                call_result:
                  $ref: '#/components/schemas/Call/properties/call_result'
                via:
                  $ref: '#/components/schemas/Call/properties/via'
                recording_link:
                  $ref: '#/components/schemas/Call/properties/recording_link'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      call:
                        $ref: '#/components/schemas/Call'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/email_messages:
    get:
      summary: Get all email messages for a specific contact
      description: ''
      tags:
      - "Contacts"
      parameters:
      - $ref: "#/components/parameters/path_contact_id"
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      email_messages:
                        type: "array"
                        items:
                          properties:
                            email_message:
                              $ref: "#/components/schemas/Email_message"
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
  /contacts/{contact_id}/assign_tag/{tag_name}:
    put:
      summary: Assign a tag to a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - $ref: '#/components/parameters/path_tag_name'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      lead_sources:
                        items:
                          $ref: '#/components/schemas/Lead_source'
                      statuses:
                        items:
                          $ref: '#/components/schemas/Status'
                      tags:
                        description: >-
                          Tags provide a means to classify contacts by however
                          many tags you choose to attach to them. There are 2
                          types of tags, tags and system tags
                        properties:
                          tags:
                            description: >-
                              An array of custom tags. A custom tag is a user
                              created tag used for categorising contacts
                            type: array
                            items:
                              $ref: '#/components/schemas/Tag'
                          system_tags:
                            description: >-
                              An array of system tags. A system tag is a system
                              generate tag used for categorising contacts
                            type: array
                            items:
                              $ref: '#/components/schemas/Tag'
                      contacts_count:
                        $ref: '#/components/schemas/Contacts_count'
                      team_stream:
                        $ref: '#/components/schemas/Team_stream'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/unassign_tag/{tag_name}:
    put:
      summary: Remove a tag from a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - $ref: '#/components/parameters/path_tag_name'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      lead_sources:
                        items:
                          $ref: '#/components/schemas/Lead_source'
                      statuses:
                        items:
                          $ref: '#/components/schemas/Status'
                      tags:
                        description: >-
                          Tags provide a means to classify contacts by however
                          many tags you choose to attach to them. There are 2
                          types of tags, tags and system tags
                        properties:
                          tags:
                            description: >-
                              An array of custom tags. A custom tag is a user
                              created tag used for categorising contacts
                            type: array
                            items:
                              $ref: '#/components/schemas/Tag'
                          system_tags:
                            description: >-
                              An array of system tags. A system tag is a system
                              generate tag used for categorising contacts
                            type: array
                            items:
                              $ref: '#/components/schemas/Tag'
                      contacts_count:
                        $ref: '#/components/schemas/Contacts_count'
                      team_stream:
                        $ref: '#/components/schemas/Team_stream'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/change_status/{status_id}:
    put:
      summary: Change the status of a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - $ref: '#/components/parameters/path_status_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/change_owner/{owner_id}:
    put:
      summary: Change the owner of a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      - $ref: '#/components/parameters/path_owner_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/star:
    put:
      summary: Apply a star to a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/unstar:
    put:
      summary: Remove star from a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/close_sales_cycle:
    put:
      summary: Close the sales cycle for a specific contact
      description: >-
        Only do this when you are no longer actively trying to sell to this contact. <br>
        Add an optional closing comment with the `comment` field in the request body. <br> <br>
        Note: cannot close sales cycle if the user has any active (not complete) actions with the contact. <br>
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                comment:
                  example: Joe in not interested in buying windmills at this time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/reopen_sales_cycle:
    put:
      summary: Reopen the sales cycle for a specific contact
      description: ''
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /contacts/{contact_id}/split:
    put:
      summary: Split a contact from their current company (and potentially to a new company)
      description: >-
        Contact is removed (split) from it's current company, and optionally joins another. <br>
        Send the field `company_name` in the body with the new company's name, or leave blank. <br> <br>
        **Warning**: splitting the last contact from a company, will cause that company to be deleted,
        and loss of company data may occur e.g. company phone number or postal address. <br>
      tags:
      - Contacts
      parameters:
      - $ref: '#/components/parameters/path_contact_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                company_name:
                  example: 'Fancy New Company Inc.'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contact:
                        $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        409:
          $ref: '#/components/responses/409'
        500:
          $ref: '#/components/responses/500'
  /action_stream:
    get:
      summary: Get a list of contacts prioritized by their next action
      description: >-
        Defaults to the logged API user's action stream. <br>
      tags:
      - Action Stream
      parameters:
      - $ref: '#/components/parameters/query_team'
      # Search field values
      - $ref: '#/components/parameters/query_contacts_search'
      - $ref: '#/components/parameters/query_contacts_phone'
      - $ref: '#/components/parameters/query_url'
      # Boolean flags/filters
      - $ref: '#/components/parameters/query_action_stream'
      - $ref: '#/components/parameters/query_has_actions'
      - $ref: '#/components/parameters/query_has_actions_for_me'
      - $ref: '#/components/parameters/query_pending_deal'
      - $ref: '#/components/parameters/query_starred'
      - $ref: '#/components/parameters/query_waiting'
      # Related value constraints
      - $ref: '#/components/parameters/query_email'
      - $ref: '#/components/parameters/query_contacts_letter'
      - $ref: '#/components/parameters/query_custom_field_id'
      - $ref: '#/components/parameters/query_custom_field_value'
      - $ref: '#/components/parameters/query_lead_source'
      - $ref: '#/components/parameters/query_lead_source_id'
      - $ref: '#/components/parameters/query_status_id'
      - $ref: '#/components/parameters/query_contacts_owner_id'
      - $ref: '#/components/parameters/query_contacts_company_id'
      - $ref: '#/components/parameters/query_contacts_tag'
      - $ref: '#/components/parameters/query_contacts_filter_id'
      # Date filters
      - $ref: '#/components/parameters/query_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      # Sort order
      - $ref: '#/components/parameters/query_contacts_sort_by'
      - $ref: '#/components/parameters/query_order'
      # Pagination
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contacts:
                        type: "array"
                        items:
                          properties:
                            contact:
                              $ref: "#/components/schemas/Contact"
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
  /team_stream:
    get:
      summary: Get a list of contacts prioritized by their next action
      description: >-
        Defaults to the action stream for entire account in a single list. <br>
        See the action stream of account users, by providing the `user_id` param. <br>
      tags:
      - Team Stream
      parameters:
      - $ref: '#/components/parameters/query_user_id'
      - $ref: '#/components/parameters/query_team'
      # Search field values
      - $ref: '#/components/parameters/query_contacts_search'
      - $ref: '#/components/parameters/query_contacts_phone'
      - $ref: '#/components/parameters/query_url'
      # Boolean flags/filters
      - $ref: '#/components/parameters/query_action_stream'
      - $ref: '#/components/parameters/query_has_actions'
      - $ref: '#/components/parameters/query_has_actions_for_me'
      - $ref: '#/components/parameters/query_pending_deal'
      - $ref: '#/components/parameters/query_starred'
      - $ref: '#/components/parameters/query_waiting'
      # Related value constraints
      - $ref: '#/components/parameters/query_email'
      - $ref: '#/components/parameters/query_contacts_letter'
      - $ref: '#/components/parameters/query_custom_field_id'
      - $ref: '#/components/parameters/query_custom_field_value'
      - $ref: '#/components/parameters/query_lead_source'
      - $ref: '#/components/parameters/query_lead_source_id'
      - $ref: '#/components/parameters/query_status_id'
      - $ref: '#/components/parameters/query_contacts_owner_id'
      - $ref: '#/components/parameters/query_contacts_company_id'
      - $ref: '#/components/parameters/query_contacts_tag'
      - $ref: '#/components/parameters/query_contacts_filter_id'
      # Date filters
      - $ref: '#/components/parameters/query_date_filter'
      - $ref: '#/components/parameters/query_since'
      - $ref: '#/components/parameters/query_until'
      - $ref: '#/components/parameters/query_modified_since'
      - $ref: '#/components/parameters/query_unmodified_since'
      # Sort order
      - $ref: '#/components/parameters/query_contacts_sort_by'
      - $ref: '#/components/parameters/query_order'
      # Pagination
      - $ref: '#/components/parameters/query_page'
      - $ref: '#/components/parameters/query_per_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      contacts:
                        type: "array"
                        items:
                          properties:
                            contact:
                              $ref: "#/components/schemas/Contact"
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
  /webhooks:
    get:
      summary: Get all webhooks (associated with the logged API user's account)
      description:
      tags:
      - Web Hooks
      parameters: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      webhooks:
                        type: "array"
                        items:
                          $ref: "#/components/schemas/Webhook"
                      total_count:
                        description: Total number of items
                        type: integer
                        example: 1
                      page:
                        description: Current page number
                        type: integer
                        example: 1
                      per_page:
                        description: Number of items returned in each page
                        type: integer
                        example: 1
                      max_page:
                        description: The page number of the last page of items
                        type: integer
                        example: 1
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
  /webhooks/{webhook_id}:
    get:
      summary: Get a specific webhook
      description: ""
      tags:
      - Web Hooks
      parameters:
      - $ref: "#/components/parameters/path_webhook_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: Response code
                    example: 0
                  message:
                    type: string
                    description: Response message
                    example: OK
                  timestamp:
                    type: integer
                    description: Response time
                    example: 1528373119
                  data:
                    properties:
                      webhook:
                        $ref: "#/components/schemas/Webhook"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
    delete:
      summary: Delete a specific webhook
      description: ""
      tags:
      - Web Hooks
      parameters:
      - $ref: "#/components/parameters/path_webhook_id"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
components:
  schemas:
    Bootstrap:
      description: >-
        Bootstrap is a general wrapper around useful user details including user settings, properties and account details
      properties:
        user_id:
          type: string
          description: Id of the user
          example: 5aba31e99007ba0f570c12f7
        auth_key:
          type: string
          description: Encoded string used to sign API requests.
          example: c+g0Y3VGHdIztKbHcjVcOuwf34EmFlXI9Qot5hTvb2F=
        user:
          $ref: '#/components/schemas/User'
        team:
          type: array
          description: An array of Users objects that are on this team
          items:
            $ref: '#/components/schemas/User'
        account_type:
          type: string
          description: >-
            Which type of account the user has. This will be one of: free, pro
            or trial.
          enum:
          - pro
          - trial
          - free
          example: pro
        settings:
          $ref: '#/components/schemas/Settings'
        cost_setup:
          $ref: '#/components/schemas/Cost_setup'
        custom_fields:
          description: A list of custom field objects that are avaliable for the account
          type: array
          items:
            $ref: '#/components/schemas/Custom_field'
        company_fields:
          description: A list of company fields objects that are avaliable for the account
          type: array
          items:
            $ref: '#/components/schemas/Company_field'
        deal_fields:
          description: A list of deal field objects that are avaliable for the account
          type: array
          items:
            $ref: '#/components/schemas/Deal_field'
        filters:
          description: An array of Filters
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        call_results:
          description: A list of call result types
          type: array
          items:
            type: string
          example:
            interested: Interested
            not_interested: Not interested
            left_message: Left message
            no_answer: No answer
            other: Other
        call_results_order:
          description: An ordered list of call result types
          type: array
          items:
            type: string
          example:
          - interested
          - not_interested
          - left_message
          - no_answer
          - other
        next_action_dates:
          description: Users quick select options for next action dates
          properties:
            number:
              description: Number of periods
              type: integer
              example: 5
            period:
              description: Period type
              type: string
              enum:
              - days
              - weeks
              - months
              example: days
        predefined_actions:
          description: an array of predefined actions
          type: array
          items:
            $ref: '#/components/schemas/Predefined_action'
        contact_titles:
          description: >-
            List of titles which can be chosen from. Only returned if the
            account owner has title_enabled set.
          type: array
          items:
            type: string
          example:
          - Mr
          - Mrs
          - Ms
    User:
      description: >-
        Useful information about the logged user and other members of the team. Each can update their own info.
        Admins can update all.
      properties:
        id:
          type: string
          description: ID of the user (read only)
          example: 5aba31e99007ba0f570c12f7
        first_name:
          type: string
          description: First name of the user
          example: Jane
        last_name:
          type: string
          description: Last name of the user
          example: Doe
        email:
          type: string
          description: Email address of the user
          example: jane.doe@{foo.bar}.com
        company_name:
          type: string
          description: Name of the company that the user works for
          example: Big Company Inc.
        account_rights:
          description: List of permissions which the user possesses (read only)
          type: array
          items:
            type:
          enum:
          - account_owner
          - admin
          - activity
          - edit_target
          - delete_contacts
          - delete_deals
          - pipeline
          - export
          - private_contacts
          example:
          - activity
          - edit_target
          - pipeline
          - export
          - private_contacts
        photo_url:
          description: Url of the user’s profile picture
          type: string
          example: https://{foo.bar}.com/jane-doe.jpg
        country_code:
          description: ISO country code of the user's address
          type: string
          example: IE
        bcc_email:
          description: >-
            BCC email dropbox address of the user (you can only see your own BCC email address)
          type: string
          example: 5abg31e93007ba0f470c92q6@users.onepagecrm.com
        google_contacts_email:
          description: >-
            Google Contacts email address of the user (you can only see your own Google Contacts email address)
          type: string
          example: jane.doe@{googles-mail-service}.com
    Contact:
      description: >-
        Information about the people you are actively trying to sell to, and related sub-resources like
        Actions, Deals, Notes, and Calls.
      properties:
        id:
          type: string
          description: ID of the contact (read only)
          example: 5aba31ea9007ba0f570c92d4
        first_name:
          type: string
          description: First name of the contact
          example: Joe
        last_name:
          type: string
          description: Last name of the contact
          example: Bloggs
        job_title:
          type: string
          description: Job title of the contact
          example: Engineer
        company_id:
          type: string
          description: ID of the company, to which the contact belongs
          example: 5aba31ea9007ba0f570c92d5
        company_name:
          type: string
          description: Name of the company, to whom the contact belongs
          example: Morgan's Forensic Lab
        company_size:
          type: integer
          description: Number of contacts within the contact's company (read only)
          example: 1
        owner_id:
          type: string
          description: ID of the user who owns the contact
          example: 5aba31e99007ba0f570c92a5
        status:
          type: string
          description: Status of the contact
          example: Prospect
        status_id:
          $ref: '#/components/schemas/Status/properties/id'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag/properties/name'
        starred:
          type: boolean
          description: Starred status of the contact
          example: false
        background:
          type: string
          description: Background infomation about the contact
          example: >-
            I met Joe Bloggs at the annual Eco Conference in Florida. Her company currently provides
            solar panels (along with a lot of other stuff) to the State Government of California, Nevada, Oregon,
            Arizona and Utah for capital building projects. Her current supplier is crazy expensive! I've asked
            to be able to tender for their next order.
        lead_source_id:
          $ref: '#/components/schemas/Lead_source/properties/id'
        pending_deal:
          type: boolean
          description: True if contact has one or more pending deals (read only)
          example: true
        total_pendings:
          type: number
          description: The total value of all pending deals for the contact (read only)
          example: 1200.99
        total_deals_count:
          type: string
          description: Number of deals for the contact (read only)
          example: 3
        photo_url:
          type: string
          description: Url of the contact's photo (read only)
          example: https://{foo.bar}.com/joe-bloggs.jpg
        custom_fields:
          description: A list of extra data fields for the contact
          type: array
          items:
            $ref: '#/components/schemas/Custom_field'
        address_list:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/Company/properties/address'
        google_contacts_data:
          description: The google contacts data associated with this contact
          properties:
            account_email:
              type: string
              description: Google contacts email
              example: '{foo}@{bar}.ie'
            id:
              type: string
              description: Google contact id
              example: 342c5b5c08d4b0b2
            saved_at:
              type: integer
              description: timestamp that this google_contact was saved
              example: 1522840153
        letter:
          type: string
          description: The first letter of the contacts last name
          example: b
        url:
          type: array
          description: Urls associated with the contact
          items:
            properties:
              type:
                type: string
                description: The type of url
                example: linkedin
              value:
                type: string
                description: The url associated with the contact
                example: http://www.linkedin.com/{some.user}
        phones:
          type: array
          description: Phone numbers associated with the contact
          items:
            properties:
              type:
                type: string
                description: The type of phone number
                example: work
              value:
                type: string
                description: Phone number
                example: 012 345 6789
        emails:
          type: array
          description: Email addresses associated with the contact
          items:
            properties:
              type:
                type: string
                description: The type of email address
                example: work
              value:
                type: string
                description: Email address
                example: joe.bloggs@example.com
        sales_closed_for:
          type: string
          description: A list of user ID's that closed sales for this contacts. (read-only)
          example: 5aba31e99007ba0f570c92a5
        closed_sales:
          type: array
          description: A list of closed sales objects. (read-only)
          items:
            properties:
              user_id:
                description: Id of the user that closed the sales cycle
                type: string
                example: 5aba31e99007ba0f570c92a5
              closed_at:
                description: timestamp that the sales cycle was closed
                type: integer
                example: 1524818902
              comment:
                description: Closing comment
                type: string
                example:
        created_at:
          type: string
          description: The contact's creation date.
          example: 2018-05-16T11:52:09Z
        modified_at:
          type: string
          description: The contact's last modification date.
          example: 2018-05-16T11:52:09Z
        title:
          type: string
          description: The title of the contact
          example: Mr
    Company:
      description: >-
        Referred to as 'organizations' in the web application. Companies are logical collections of Contacts and
        related sub-resources e.g. Deals, Actions and some basic info on the org. e.g. postal address, website. A
        Company may not be created directly or exist without a Contact.
      properties:
        id:
          type: string
          description: id of the company
          example: 5aba31e99007ba0f570c92ac
        name:
          type: string
          description: name of the company
          example: Crockett & Tubbs Security
        description:
          type: string
          description: Description of the company
          example: For all your security needs
        phone:
          type: string
          description: Phone number of the company
          example: 012 345 6789
        url:
          type: string
          description: Company Url
          example: http://example.com
        company_fields:
          type: array
          items:
            properties:
              company_field:
                $ref: '#/components/schemas/Company_field'
        syncing_status:
          type: boolean
          description: Should all contacts in this company share the same status?
          example: true
        synced_status_id:
          type: boolean
          description: The status that all contacts within this company are synced to
          example: 5aaa9b039007ba08c9ebaf0a
        syncing_tags:
          type: boolean
          description: Should all contacts in this company share the same tags?
          example: false
        synced_tags:
          type: array
          description: >-
            The tags that all contacts within this company share.
          items:
            properties:
              tag:
                $ref: "#/components/schemas/Tag"
        address:
          description: The company address
          properties:
            address:
              type: string
              example: 123 Fake street
            city:
              type: string
              example: Big City
            state:
              type: string
              example: Awesome State
            zip_code:
              type: string
              example: 0123456
            country_code:
              type: string
              example: IE
        created_at:
          type: string
          description: The action's creation date.
          example: 2018-05-16T11:52:09Z
        modified_at:
          type: string
          description: The action's last modification date.
          example: 2018-05-16T11:52:09Z
        contacts_count:
          type: integer
          description: Number of contacts in this company
          example: 4
        won_deals_count:
          type: integer
          description: Number of deals closed with contacts in this company
          example: 14
        total_won_amount:
          type: integer
          description: The total value of the won deals with contacts in this company
          example: 2650
        total_pending_amount:
          type: integer
          description: The total value of the pending deals with contacts in this company
          example: 5800
        total_pending_count:
          type: integer
          description: Number of the pending deals with contacts in this company
          example: 5800
        contacts:
          type: array
          items:
            properties:
              contact:
                $ref: '#/components/schemas/Contact'
              next_actions:
                type: array
                items:
                  $ref: '#/components/schemas/Action'
              next_action:
                $ref: '#/components/schemas/Action'
              queued_actions:
                type: array
                items:
                  $ref: '#/components/schemas/Action'
              queued_action_conflicts:
                type: array
                items:
                  $ref: '#/components/schemas/Action'
              company:
                $ref: '#/components/schemas/Company'
        pending_deals:
          type: array
          items:
            properties:
              deal:
                $ref: '#/components/schemas/Deal'
    Action:
      description: >-
        Completable tasks related to Contacts. ASAP first, then dated actions ordered by due date (overdue first),
        followed by waiting for (blocked) and finally queued actions (without any date).
      properties:
        id:
          type: string
          description: Action id
          example: 5aeac8789007ba56ffca92b9
        assignee_id:
          type: string
          description: The id of the user that this action is assigned to
          example: 5aaa9b009007ba08c9ebaef7
        contact_id:
          type: string
          description: Contact id that this action is for
          example: 5aaa9b009007ba08c9ebaef7
        text:
          type: string
          description: The action text
          example: '#1 Email Jane introducing our organization'
        status:
          type: string
          description: The action status
          example: date
        done:
          type: boolean
          description: Has this action been completed?
          example: false
        created_at:
          type: string
          description: The action's creation date
          example: 2018-05-16T11:52:09Z
        modified_at:
          type: string
          description: The action's last modification date
          example: 2018-05-16T11:52:09Z
        done_at:
          type: string
          description: >-
            The date the action was completed. This is only returned if the
            action has been completed
          example: 2018-05-16
        date:
          type: string
          description: >-
            The date the action is due. This is only returned if the action
            status is date or date_time
          example: 2018-05-16
        exact_time:
          type: string
          description: >-
            The exact time the action is due. This is only returned if the
            action status is date_time
          example: 2018-05-16
        position:
          type: integer
          description: >-
            The position of this action in the queued actions. This is only
            returned if the action status is queued
          example: 2
    Deal:
      description: >-
        Represent (potential) financial transactions with your contacts. Deals include information like amount,
        deal stage, closed date or expected close date. Deals support file attachments.
      properties:
        id:
          description: Deal ID (read only)
          type: string
          format: bson_id
          example: 5aaa9b059007ba08c9ebaf58
        contact_id:
          description: ID of the Contact this deal belongs to (read only)
          type: string
          format: bson_id
          example: 5aaa9b059007ba08c9ebaf58
        owner_id:
          description: ID of the User this deal belongs to
          type: string
          format: bson_id
          example: 5aba31e99007ba0f570c12f7
        owner:
          description: >-
            JSON object containing owner information: id, name, email. (read
            only)
          properties:
            id:
              type: string
              description: Id of the deal owner
              example: 5aba31e99007ba0f570c12f7
            name:
              type: string
              description: Name of owner
              example: Joe Bloggs
            email:
              type: string
              description: Email address of the deal owner
              example: joe.bloggs@example.com
        name:
          description: Name of the deal - truncated to 60 characters. (required)
          type: string
          example: March deal
        text:
          description: >-
            The text in the body of the deal - truncated to 7168 characters. You
            may use BBCode: bold (`[b]text[/b]`), italics (`[i]text[/i]`) and
            new line ('\n').
          type: string
          example: Figers crossed!
        date:
          description: Date related to the deal’s creation
          type: string
          format: date
          example: 2018-03-14
        contact_info:
          description: >-
            JSON object containing contact_name and company relating to deal.
            (read only)
          properties:
            contact_name:
              type: string
              description: Name of the contact associated with this deal
              example: Joe Bloggs
            company:
              type: string
              description: Name of the company associated with this deal
              example: Big Company Inc
        author:
          description: >-
            First name and first letter of last name of the author of the deal
            (read only)
          type: string
          example: Joe Bloggs
        amount:
          description: Total amount of money to be paid per month
          type: number
          format: float
          example: 5130
        months:
          description: Number of months the above amount will be paid for
          type: integer
          format: int32
          example: 1
        total_amount:
          description: Product of amount and months (read only)
          type: number
          format: float
          example: 5130
        cost:
          description: The cost of the deal
          type: number
          format: float
          example: 0
        total_cost:
          description: The total cost of the deal
          type: number
          format: float
          example: 0
        margin:
          description: Profit or loss on the deal
          type: number
          format: float
          example: 5130
        commission:
          description: Commission on the deal
          type: number
          format: float
          example: 0
        commission_percentage:
          description: Commission Percentage on the deal
          type: number
          format: float
          example: 0
        commission_type:
          description: Type of commission calculation in deal
          type: string
          enum:
          - none
          - percentage
          - absolute
          example: none
        commission_base:
          description: Base used in deal commission calculation
          type: string
          enum:
          - amount
          - margin
          example: none
        status:
          description: Status of the deal
          type: string
          enum:
          - won
          - lost
          - pending
          example: pending
        has_related_notes:
          description: True if the deal has related notes. (read only)
          type: boolean
          example: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        deal_fields:
          type: array
          items:
            properties:
              deal_field:
                $ref: '#/components/schemas/Deal_field'
              value:
                type: string
                description: deal field value
                example: >-
                  big
        created_at:
          description: Date the deal was created at (read-only)
          type: string
          format: date-time
          example: 2018-03-15T16:10:45Z
        modified_at:
          description: Deal’s last modification time (read-only)
          type: string
          format: date-time
          example: 2018-03-15T16:10:45Z
        stage:
          description: >-
            What stage this deal is at. This can be converted to a label using
            the deal stages list in the settings resource.
          type: integer
          format: int32
          example: 60
        expected_close_date:
          description: >-
            Date when the deal is expected to be closed. This is only returned
            if the status of the deal is pending
          type: string
          format: date
          example: 2018-04-15
        close_date:
          description: >-
            Date that the deal was closed. This is set automatically when a deal
            is marked as won or lost (read only).
          type: string
          format: date
    Note:
      description: >-
        Allow you to keep track of additional information related to your contacts. Notes can include any
        information you feel is relevant e.g. interactions with that contact. Notes support file attachments.
      properties:
        id:
          type: string
          description: Id of the note
          example: 5afc1b69d556730b580596cb
        author:
          type: string
          description: Author of the note
          example: Joe Bloggs
        contact_id:
          type: string
          description: id of the contact this note belongs to. (read only)
          example: 5ae06ef9d55673108fe8877f
        text:
          type: string
          description: >-
            The text in the body of the note (required). You may use BBCode:
            `[b]bold[/b]`, `[i]italics[/i]` and new line (`\n`).
          example: >-
            I met Jane Doe at the ABC conference and she is interested in
            hearing more about XYZ
        date:
          type: string
          description: Date the note was created
          example: 2018-05-16
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        linked_deal_id:
          type: string
          description: null if there is no linked deal
          example: ''
        created_at:
          type: string
          description: The note's creation date.
          example: 2018-05-16T11:52:09Z
        modified_at:
          type: string
          description: The note's last modification date.
          example: 2018-05-16T11:52:09Z
    Call:
      description: >-
        Allow you to keep track of phone calls made to your contacts. Calls include information like the phone
        number dialled and the call result. Calls support file attachments.
      properties:
        id:
          type: string
          description: Id of the call
          example: 5afc1b69d556730b580596cb
        author:
          type: string
          description: Author's name. The last name is abbreviated. (read only)
          example: Joe Bloggs
        text:
          type: string
          description: >-
            The text in the note of the call - truncated to 10000 characters.
            You may use BBCode: `[b]bold[/b]`, `[i]italics[/i]` and new line
            (`\n`).
          example: Mary is interested in coming into the office on Tuesday
        call_result:
          type: string
          description: >-
            The result of the call. Default values: 'interested',
            'not_interested', 'no_answer' or 'left_message'. You can add other
            values in the main application. You can not add other values with
            the API. If not specified, defaults to 'interested'.
          example: interested
        call_time_int:
          description: >-
            Time the call occurred at. Must be in unix epoch time format. If not
            specified, defaults to current time.
          type: integer
          example: 1525273653
        contact_id:
          type: string
          description: id of the contact this call belongs to. (read only)
          example: 5ae06ef9d55673108fe8877f
        via:
          type: string
          description: Through what application did this call take place?
          enum:
          - unknown
          - skype
          - jabber
          - talkdesk
          - phone
          example: phone
          default: unknown
        phone_number:
          type: string
          description: Phone number
          example: 123 456 7891 (mobile)
        recording_link:
          type: string
          description: URL of a recording of the call conversation.
          example: ''
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        created_at:
          type: string
          description: The call's creation date.
          example: 2018-05-16T11:52:09Z
        modified_at:
          type: string
          description: The call's last modification date.
          example: 2018-05-16T11:52:09Z
        index:
          type: integer
          description: Result index
          example: 4
    Attachment:
      description: >-
        Additional files associated with Deals, Notes or Calls. They can be uploaded and stored in S3,
        or stored in external providers i.e. Google Drive, Dropbox, Evernote.
      properties:
        id:
          type: string
          description: Id of the attachment
          example: 5afc1ea9d556730b780096db
        storage_provider:
          type: string
          description: Where the attachment is stored
          example: amazon
        filename:
          type: string
          description: The filename of the attachment
          example: mario.jpeg
        url:
          type: string
          description: External URL for the file
          example: https://{foo.bar}/mario.jpg
        size:
          type: string
          description: Size of the file
          example: 3841
        url_expires_at:
          type: string
          description: The date the attachment url experies
          example: 2018-05-16T13:06:53Z
    Email_message:
      description: Email message
      properties:
        id:
          type: string
          description: Id of the email message
          example: 5b07c04a9007ba0231f4dcf2
        contact_id:
          type: string
          description: Contact id
          example: 5aba338b9007ba0f570c9392
        send_time:
          type: string
          description: Sent time in UTC (iso8601 format)
          example: 2018-05-25T07:47:28Z
        message_id:
          type: string
          description: Id of the email message
          example: CBNlTUjddeY9vF8cArqStad7QVjpeU_dqp+oJNaWX-SPVd2+_Dg@mail.gmail.com
        sender:
          type: string
          description: sender
          example: foo bar <foobar@gmail.com>
        recipients:
          description: Email recipients
          properties:
            to:
              type: array
              items:
                type: string
                description: to
                example: a_fake.email@something.com
            cc:
              type: array
              items:
                type: string
                description: cc
                example: b_fake.email@something.com
            bcc:
              type: array
              items:
                type: string
                description: bcc
                example: c_fake.email@something.com
        url:
          type: string
          description: url where the email is stored. This may be an empty string depending if not relevent
          example: 5aba31ea9007ba0f570c92d4
        subject:
          type: string
          description: email subject
          example: email subject
        plain_content:
          type: string
          description: The body of the email
        status:
          type: string
          description: email status
          example: sent
        incoming_email:
          type: string
          description: emails incoming for this email address
          example: false
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    Settings:
      description: User settings
      properties:
        reminder:
          $ref: '#/components/schemas/Reminder'
        time_zone:
          description: Name of the timezone
          type: string
          example: Europe/Dublin
        not_working_days:
          description: >-
            Days that the user doesn't work. This is used when calculating
            suggested next action day for predefined actions.
          type: string
          enum:
          - sunday
          - weekend
          - none
          example: weekend
        date_format:
          description: The format of date strings
          type: string
          example: '%d/%m/%Y'
        time_with_ampm:
          description: Use AM/PM of 24 clock for time
          type: boolean
          example: false
        listing_size:
          description: When on the app, listing size is the number of actions to show at a time in the action stream
          type: integer
          example: 25
        currency:
          description: Users Currency
          type: string
          example: EUR
        currency_symbol:
          description: Currency Symbol
          type: string
          example: €
        separator:
          description: Decimal point seperator for currency
          type: string
          example: '.'
        delimiter:
          description: thousands delimiter for currency
          type: string
          example: ','
        popular_countries:
          description: The last 5 countries that were selected when adding contacts or companies.
          type: array
          items:
            type: string
          example:
          - US
        deal_stages:
          $ref: '#/components/schemas/DealStages'
        default_contact_type:
          description: ''
          type: string
          enum:
          - company
          - individual
          example: company
        show_tidy_stream:
          description: Should contacts with no actions be displayed in the action stream?
          type: boolean
          example: false
        show_company_fields_with_contact:
          description: Show Organization fields in contact view
          type: boolean
          example: true
        company_phone_enabled:
          description: Is the company phone enabled?
          type: boolean
          example: true
        company_url_enabled:
          description: Is the company URL enabled?
          type: boolean
          example: true
        company_address_enabled:
          description: Is the company address enabled?
          type: boolean
          example: true
        company_description_enabled:
          description: Is the company description enabled?
          type: boolean
          example: true
        send_push_notifications:
          description: Should this user recieve push notifications?
          type: boolean
          example: true
        clipper_beta:
          description: Has user enabled the clipper beta feature
          type: boolean
          example: false
    Status:
      description: >-
        Values which help qualify where contacts are in the sales pipeline. The list of Statuses is
        already populated but it may be updated if needed, to better fit your organization.
      properties:
        id:
          description: ID of the status (read only)
          type: string
          example: 5aead4809007ba56ffca942e
        status:
          description: Type of the status
          type: string
          example: lead
          enum:
          - lead
          - prospect
          - customer
          - inactive
          - general
          - custom1
          - custom2
          - customX
        text:
          description: Status text to be displayed.
          type: string
          example: Lead
        description:
          description: A description of what this status is for.
          type: string
          example: You intend to sell to.
        color:
          description: Six character hex representation of the status text color
          type: string
          example: f96600
          enum:
          - 666666
          - 3399ff
          - cc0000
          - f96600
          - 000000
          - ff00ff
          - 009900
        counts:
          description: Number of contacts the api user has with this status (read only).
          type: integer
          example: 3
        total_count:
          description: >-
            Number of contacts this user’s team has with this status (read
            only).
          type: string
          example: 3
        action_stream_count:
          description: >-
            The number of contacts that this api user has actions with and that
            have this status
          type: integer
          example: 2
        team_counts:
          description: Number of contacts with this status grouped by user
          type: array
          items:
            properties:
              user_id:
                description: ID of one ot the api user’s team members
                type: string
                example: 5aba31e99007ba0f570c12f7
              counts:
                description: Number of contacts user_id owns with this status
                type: integer
                example: 4
    Lead_source:
      description: >-
        A way to classify the source of any contact that is added to OnePageCRM. Like Statuses, this list is
        pre-populated, and can be later edited to fit individual needs.
      properties:
        id:
          description: ID of the lead source
          type: string
          example: Advertisement
        text:
          description: Description of this type of lead source
          type: string
          example: Advertisement
        counts:
          description: Number of contacts the api user has with this status
          type: integer
          example: 4
        total_count:
          description: Number of contacts this user’s team has with this status
          type: integer
          example: 7
        action_stream_count:
          description: >-
            The number of contacts that this api user has actions with and that
            have this lead source
          type: integer
          example: 2
        team_counts:
          description: Number of contacts with this lead_source grouped by user
          type: array
          items:
            properties:
              user_id:
                description: ID of one ot the api user’s team members
                type: string
                example: 5aba31e99007ba0f570c12f7
              counts:
                description: Number of contacts user_id owns with this lead source
                type: integer
                example: 4
    Filter:
      description: >-
        Allow you to query contacts in your own custom way. These filters can only be created on the website but
        they can be used through the API.
      properties:
        id:
          description: Id of the custom filter
          type: string
          example: 5ae9cc2a9007ba5b856c7bb8
        name:
          description: Name of the Filter.
          type: string
          example: Display only stared contacts
        conditions:
          description: Conditions of the filter
          type: array
          items:
            type: string
          example:
          - - star
            - selected
            - ''
          - - tags
            - is_not
            - VIP
    Tag:
      properties:
        name:
          description: Name of the tag
          type: string
          example: VIP
        counts:
          description: Number of contacts the api user has with this tag (read only)
          type: integer
          example: 2
        total_count:
          description: Number of contacts this user’s team has with this tag (read only)
          type: integer
          example: 4
        action_stream_count:
          description: >-
            The number of contacts that this api user has actions with and that
            have this Tag
          type: integer
          example: 1
    Predefined_action:
      description: >-
        Template actions users may use frequently in their sales process. Referred to as 'Saved Actions' in
        the web application.
      properties:
        id:
          description: Id of the predefined action
          type: string
          example: 5acddaa7d556733c507tf405
        text:
          description: Text describing this predefined action
          type: string
          example: '#1 Email [firstname] introducing our organization'
        days:
          description: Suggested the number of days until the action becomes due.
          type: integer
          example: 4
    Custom_field:
      description: Extra user-configurable data fields for Contacts. Only editable by admins.
      properties:
        id:
          description: Id of the custom field
          type: string
          example: 5aad9b039007ba18c9ebad13
        name:
          description: Name of the custom field. Used for identification of custom fields.
          type: string
          example: Favorite season
        type:
          description: Type of custom field.
          type: string
          enum:
          - single_line_text
          - multi_line_text
          - multiple_choice
          - select_box
          - date
          - number
          - anniversary
          example: multiple_choice
        position:
          description: The position of this custom field in the list of custom fields
          type: integer
          example: 2
        choices:
          description: >-
            An array of possible choices. This needs to be present only for
            custom fields of type multiple_choice or select_box
          type: string
          example:
          - Spring
          - Summer
          - Autumn
          - Winter
    Company_field:
      description: Extra user-configurable data fields for Companies. Only editable by admins.
      properties:
        id:
          description: Id of the company field
          type: string
          example: 5aad9b039007ba28c9ebad56
        name:
          description: >-
            Name of the company field. Used for identification of company
            fields.
          type: string
          example: Size of company
        type:
          description: Type of custom field.
          type: string
          enum:
          - single_line_text
          - multi_line_text
          - multiple_choice
          - select_box
          - date
          - number
          - anniversary
          example: multiple_choice
        position:
          description: The position of this company field in the list of company fields
          type: integer
          example: 2
        choices:
          description: >-
            An array of possible choices. This needs to be present only for
            company fields of type multiple_choice or select_box
          type: string
          example:
          - big
          - medium
          - small
    Deal_field:
      description: Extra user-configurable data fields for Deals. Only editable by admins.
      properties:
        id:
          description: Id of the deal field
          type: string
          example: 5aad9b039007ba28c9ebad56
        name:
          description: Name of the deal field. Used for identification of deal fields.
          type: string
          example: Size of deal
        type:
          description: Type of deal field.
          type: string
          enum:
          - single_line_text
          - multi_line_text
          - multiple_choice
          - select_box
          - date
          - number
          - anniversary
          example: multiple_choice
        position:
          description: The position of this deal field in the list of deal fields
          type: integer
          example: 2
        choices:
          description: >-
            An array of possible choices. This needs to be present only for deal
            fields of type multiple_choice or select_box
          type: string
          example:
          - big
          - medium
          - small
    Cost_setup:
      description: >-
        The cost field is special deal field used when deals have costs associated with them.
        The cost field can be used for Margin-based deals. We subtract the deal cost from the deal amount to display the margin. <br>
        You can also calculate commission based on margin instead of amount. <br>
        The cost_field is disabled by default.
      properties:
        cost_enabled:
          description: Is the cost field enabled?
          type: boolean
          example: false
        # cost_required is deprecated
        cost_required:
          description: Is a 'cost' value required when closing a deal
          type: boolean
          example: false
        commission_base:
          description: How should commission be calculated?
          type: string
          enum:
          - amount
          - margin
          example: amount
        commission_percentage:
          description: What percent of the deal amount is commission?
          type: number
          example: 10.1
    DealStages:
      description: The stages that deals go through
      properties:
        stage:
          description: >-
            Integer between 0 and 100 indicated how close a deal is to being
            complete.
          type: integer
          example: 80
        label:
          description: A possible stage that a deal can in
          type: string
          example: Negotiation
    Contacts_count:
      description: >-
        This returns the total number of contacts for each user and
        for the whole team, arranged by how many contacts have a last name
        beginning with each letter of the alphabet.
      properties:
        all:
          type: array
          items:
            properties:
              1:
                description: Contacts which start with a non alphabetic character are included here
                type: integer
                example: 1
              a:
                type: integer
                example: 2
              b:
                type: integer
                example: 2
              c:
                type: integer
                example: 1
              d:
                type: integer
                example: 1
              e:
                type: integer
                example: 0
              f:
                type: integer
                example: 0
              g:
                type: integer
                example: 3
              h:
                type: integer
                example: 0
              i:
                type: integer
                example: 3
              j:
                type: integer
                example: 0
              k:
                type: integer
                example: 0
              l:
                type: integer
                example: 2
              m:
                type: integer
                example: 2
              n:
                type: integer
                example: 3
              o:
                type: integer
                example: 0
              p:
                type: integer
                example: 2
              q:
                type: integer
                example: 0
              r:
                type: integer
                example: 0
              s:
                type: integer
                example: 0
              t:
                type: integer
                example: 1
              u:
                type: integer
                example: 1
              v:
                type: integer
                example: 1
              w:
                type: integer
                example: 0
              x:
                type: integer
                example: 1
              y:
                type: integer
                example: 1
              z:
                type: integer
                example: 0
              total_count:
                type: integer
                example: 27
        users:
          type: array
          items:
            properties:
              1:
                description: Contacts which start with a non alphabetic character are included here
                type: integer
                example: 1
              a:
                type: integer
                example: 2
              b:
                type: integer
                example: 2
              c:
                type: integer
                example: 1
              d:
                type: integer
                example: 1
              e:
                type: integer
                example: 0
              f:
                type: integer
                example: 0
              g:
                type: integer
                example: 3
              h:
                type: integer
                example: 0
              i:
                type: integer
                example: 3
              j:
                type: integer
                example: 0
              k:
                type: integer
                example: 0
              l:
                type: integer
                example: 2
              m:
                type: integer
                example: 2
              n:
                type: integer
                example: 3
              o:
                type: integer
                example: 0
              p:
                type: integer
                example: 2
              q:
                type: integer
                example: 0
              r:
                type: integer
                example: 0
              s:
                type: integer
                example: 0
              t:
                type: integer
                example: 1
              u:
                type: integer
                example: 1
              v:
                type: integer
                example: 1
              w:
                type: integer
                example: 0
              x:
                type: integer
                example: 1
              y:
                type: integer
                example: 1
              z:
                type: integer
                example: 0
              total_count:
                type: integer
                example: 27
              user_id:
                description: user id
                type: string
                example: 5aaa9b009007ba08c9ebaef7
    Team_stream:
      description: >-
        Team stream is similar to the action Action Stream but shows the whole
        team's stream.
      properties:
        users:
          description: >-
            List of Hash's each containing a user's id and the number of actions
            that user has
          type: array
          items:
            properties:
              user_id:
                description: User id
                type: string
                example: 5aba31e99007ba0f570c92a5
              counts:
                description: The number of actions that user_id has
                type: integer
                example: 5
        all:
          description: Total number of actions for the stream
          type: integer
          example: 10
    Webhook:
      description: >-
        A simple, effective way to be notified when things happen in OnePageCRM. For more information,
        go to the 'WebHooks & More' tab at the top of the page.
      properties:
        id:
          type: string
          description: Id of the web hook
          example: 5417f8291da41712270G0042
        name:
          type: string
          description: The name of the web hook
          example: Awesome integration
        hook_url:
          type: string
          description: Url of the webhook
          example: https://{foo.bar}/api/v1/{endpoint}.format"
        secretkey:
          type: string
          description: Secret key of the webhook
    Reminder:
      description: Action reminder settings
      properties:
        type:
          type: string
          description: The type of reminder
          enum:
          - never
          - every_day
          - new_task
          example: new_task
        hour:
          type: integer
          description: The reminder time. This is ignored if reminder type is 'never'
          example: 6
    Error:
      properties:
        status:
          type: integer
          description: HTTP status code for the response
        message:
          type: string
          description: Summary of the failure reason
        error_name:
          type: string
          description: Key identifying which error happened
        error_message:
          type: string
          description: Slightly longer description of the failure reason
        errors:
          type: array
          description: Specific errors, commonly associated with invalid parameters
          items:
            properties:
              attribute_name:
                type: string
                description: Reason why this parameter is invalid
  parameters:
    path_user_id:
      name: user_id
      in: path
      required: true
      description: User ID
      schema:
        type: string
        minimum: 1
    path_lead_source_id:
      name: lead_source_id
      in: path
      required: true
      description: Lead Source ID
      schema:
        type: string
        minimum: 1
    path_status_id:
      name: status_id
      in: path
      required: true
      description: Status ID
      schema:
        type: string
        minimum: 1
    path_deal_field_id:
      name: deal_field_id
      in: path
      required: true
      description: Deal Field ID
      schema:
        type: string
        minimum: 1
    path_custom_field_id:
      name: custom_field_id
      in: path
      required: true
      description: Custom Field ID
      schema:
        type: string
        minimum: 1
    path_company_field_id:
      name: company_field_id
      in: path
      required: true
      description: Company Field ID
      schema:
        type: string
        minimum: 1
    path_predefined_action_id:
      name: predefined_action_id
      in: path
      required: true
      description: Predefined Action ID
      schema:
        type: string
        minimum: 1
    path_note_id:
      name: note_id
      in: path
      required: true
      description: Note ID
      schema:
        type: string
        minimum: 1
    path_deal_id:
      name: deal_id
      in: path
      required: true
      description: Deal ID
      schema:
        type: string
        minimum: 1
    path_call_id:
      name: call_id
      in: path
      required: true
      description: Call ID
      schema:
        type: string
        minimum: 1
    path_attachment_id:
      name: attachment_id
      in: path
      required: true
      description: Attachment ID
      schema:
        type: string
        minimum: 1
    path_action_id:
      name: action_id
      in: path
      required: true
      description: Action ID
      schema:
        type: string
        minimum: 1
    path_company_id:
      name: company_id
      in: path
      required: true
      description: Company ID
      schema:
        type: string
        minimum: 1
    path_contact_id:
      name: contact_id
      in: path
      required: true
      description: Contact ID
      schema:
        type: string
        minimum: 1
    path_tag_name:
      name: tag_name
      in: path
      required: true
      description: Tag name
      schema:
        type: string
        minimum: 1
    path_owner_id:
      name: owner_id
      in: path
      required: true
      description: Owner ID
      schema:
        type: string
        minimum: 1
    path_webhook_id:
      name: webhook_id
      in: path
      required: true
      description: Webhook ID
      schema:
        type: string
        minimum: 1
    path_filter_id:
      name: filter_id
      in: path
      required: true
      description: Filter ID
      schema:
        type: string
        minimum: 1
    query_companies_name:
      name: name
      in: query
      required: false
      description: Search companies by name
      schema:
        type: string
        example: Big Company Inc
    query_deals_name:
      name: name
      in: query
      required: false
      description: Search deals by name
      schema:
        type: string
        example: Solar panels
    query_contacts_phone:
      name: phone
      in: query
      required: false
      description: Search contacts by phone number
      schema:
        type: string
        example: 3736344458
    query_companies_phone:
      name: phone
      in: query
      required: false
      description: Search companies by phone number
      schema:
        type: string
        example: 3736344458
    query_contacts_letter:
      name: letter
      in: query
      required: false
      description: >-
        Return contacts whose last name begins with specified letter (or company name, if last name not present)
      schema:
        type: string
        example: a
    query_companies_letter:
      name: letter
      in: query
      required: false
      description: >-
        Return company whose name begins with specified letter
      schema:
        type: string
        example: a
    query_assignee_id:
      name: assignee_id
      in: query
      required: false
      description: Return actions assigned to a specific user
      schema:
        type: string
        example: 5aba36b19007ba0f570c9523
    query_done:
      name: done
      in: query
      required: false
      description: Should only return completed actions (i.e. have status `done`)?
      schema:
        type: boolean
        example: false
    query_actions_status:
      name: status
      in: query
      required: false
      description: >-
        Return actions of a particular status (i.e. `asap`, `date`, `date_time`, `waiting`, `queued`, `queued_with_date`, or `done`)
      schema:
        type: string
        example: date_time
    query_deals_status:
      name: status
      in: query
      required: false
      description: >-
        Return deals of a particular status (i.e. `pending`, `won`, `lost`, or `closed`)
      schema:
        type: string
        example: pending
    query_stage:
      name: stage
      in: query
      required: false
      description: Return deals (of status `pending`) with specified deal stage
      schema:
        type: string
        example: 60
    query_user_id:
      name: user_id
      in: query
      required: false
      description: >-
        Get the action stream of another user (leave blank for entire account in a single list)
      schema:
        type: string
        example: 5aaa9b009007ba08c9ebaef7
    query_contacts_search:
      name: search
      in: query
      required: false
      description: Search contacts by contact name, company name or phone number
      schema:
        type: string
        example: Jane Doe
    query_companies_search:
      name: search
      in: query
      required: false
      description: Search companies by name
      schema:
        type: string
        example: Big Company Inc
    query_deals_search:
      name: search
      in: query
      required: false
      description: Search deals by deal name, contact name or company name
      schema:
        type: string
        example: Solar panels
    query_contacts_owner_id:
      name: owner_id
      in: query
      required: false
      description: Return contacts owned by a specific user
      schema:
        type: string
        example: 5aba36b19007ba0f570c9523
    query_deals_owner_id:
      name: owner_id
      in: query
      required: false
      description: >-
        Return deals owned by a specific user
      schema:
        type: string
        example: 5aba36b19007ba0f570c9523
    query_contacts_tag:
      name: tag
      in: query
      required: false
      description: >-
        Filter contacts by tag (only use one of `company_id`, `tag` or `filter_id` at a time)
      schema:
        type: string
        example: VIP
    query_deals_tag:
      name: tag
      in: query
      required: false
      description: >-
        Filter deals by tag (only use one of `contact_id`, `company_id`, `tag` or `filter_id` at a time)
      schema:
        type: string
        example: VIP
    query_contacts_filter_id:
      name: filter_id
      in: query
      required: false
      description: >-
        Apply filter to contact listing (only use one of `company_id`, `tag` or `filter_id` at a time)
      schema:
        type: string
        example: 5ae9cc2a9007ba5b856c7bb8
    query_deals_filter_id:
      name: filter_id
      in: query
      required: false
      description: >-
        Apply filter to deal listing (only use one of `contact_id`, `company_id`, `tag` or `filter_id` at a time)
      schema:
        type: string
        example: 5ae9cc2a9007ba5b856c7bb8
    query_actions_date_filter:
      name: date_filter
      in: query
      required: false
      description: >-
        Signals which date field to be used for only returning resources, added or edited, in a specified date range
        (only to be used with `since` and/or `until`, not with `modified_since` or `unmodified_since`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - updated_at
        - date
        - close_date
    query_deals_date_filter:
      name: date_filter
      in: query
      required: false
      description: >-
        Signals which date field to be used for only returning resources, added or edited, in a specified date range
        (only to be used with `since` and/or `until`, not with `modified_since` or `unmodified_since`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - updated_at
        - date
        - close_date
        - expected_close_date
    query_notes_date_filter:
      name: date_filter
      in: query
      required: false
      description: >-
        Signals which date field to be used for only returning resources, added or edited, in a specified date range
        (only to be used with `since` and/or `until`, not with `modified_since` or `unmodified_since`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - updated_at
        - date
    query_calls_date_filter:
      name: date_filter
      in: query
      required: false
      description: >-
        Signals which date field to be used for only returning resources, added or edited, in a specified date range
        (only to be used with `since` and/or `until`, not with `modified_since` or `unmodified_since`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - updated_at
        - call_time
    query_date_filter:
      name: date_filter
      in: query
      required: false
      description: >-
        Signals which date field to be used for only returning resources, added or edited, in a specified date range
        (only to be used with `since` and/or `until`, not with `modified_since` or `unmodified_since`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - updated_at
    query_since:
      name: since
      in: query
      required: false
      description: >-
        Specifies the start of the date range to filter resources, which have been added or edited
        (use with `date_filter` - date must be in format `YYYY-MM-DD` or unix timestamp)
      schema:
        type: string
        format: date-time
        example: 2018-07-01
    query_until:
      in: query
      name: until
      description: >-
        Specifies the end of the date range to filter resources, which have been added or edited
        (use with `date_filter` - date must be in format `YYYY-MM-DD` or unix timestamp)
      schema:
        type: string
        format: date-time
        example: 2018-07-31
    query_modified_since:
      in: query
      name: modified_since
      description: >-
        Return only resources that were modified since specified time (cannot be used with `date_filter`
        - date must be in format `YYYY-MM-DD` or unix timestamp)
      schema:
        type: string
        format: date-time
        example: 2018-07-01
    query_unmodified_since:
      in: query
      name: unmodified_since
      description: >-
        Return only resources that were unmodified since specified time (cannot be used with `date_filter`
        - date must be in format `YYYY-MM-DD` or unix timestamp)
      schema:
        type: string
        format: date-time
        example: 2018-07-01
    query_actions_contact_id:
      name: contact_id
      in: query
      description: >-
        Return actions for a specific contact (only use one of `contact_id` or `company_id` at a time)
      required: false
      schema:
        type: string
        example: 5ae06ef9d55673108fe8877b
    query_deals_contact_id:
      name: contact_id
      in: query
      description: >-
        Return deals for a specific contact (only use one of `contact_id`, `company_id`, `tag` or `filter_id` at a time)
      required: false
      schema:
        type: string
        example: 5ae06ef9d55673108fe8877b
    query_notes_contact_id:
      name: contact_id
      in: query
      description: >-
        Return notes for a specific contact (only use one of `contact_id` or `company_id` at a time)
      required: false
      schema:
        type: string
        example: 5ae06ef9d55673108fe8877b
    query_calls_contact_id:
      name: contact_id
      in: query
      description: >-
        Return calls for a specific contact (only use one of `contact_id` or `company_id` at a time)
      required: false
      schema:
        type: string
        example: 5ae06ef9d55673108fe8877b
    query_contacts_company_id:
      name: company_id
      in: query
      description: >-
        Return contacts from a specific company (only use one of `company_id`, `tag` or `filter_id` at a time)
      required: false
      schema:
        type: string
        example: 6se06df9d55673108re84745
    query_deals_company_id:
      name: company_id
      in: query
      description: >-
        Return deals for a specific company (only use one of `contact_id`, `company_id`, `tag` or `filter_id` at a time)
      required: false
      schema:
        type: string
        example: 6se06df9d55673108re84745
    query_actions_company_id:
      name: company_id
      in: query
      description: >-
        Return actions for a specific company (only use one of `contact_id` or `company_id` at a time)
      required: false
      schema:
        type: string
        example: 6se06df9d55673108re84745
    query_notes_company_id:
      name: company_id
      in: query
      description: >-
        Return notes for a specific company (only use one of `contact_id` or `company_id` at a time)
      required: false
      schema:
        type: string
        example: 6se06df9d55673108re84745
    query_calls_company_id:
      name: company_id
      in: query
      description: >-
        Return calls for a specific company (only use one of `contact_id` or `company_id` at a time)
      required: false
      schema:
        type: string
        example: 6se06df9d55673108re84745
    query_action_stream:
      name: action_stream
      in: query
      description: Only return results that are also in action stream
      required: false
      schema:
        type: boolean
        example: true
    query_email:
      name: email
      in: query
      description: >-
        Return contacts whose email matches that provided with this query param
      required: false
      schema:
        type: string
        example: abc@example.com
    query_has_actions:
      name: has_actions
      in: query
      description: >-
        Only return contacts who are owned by the logged user, and have actions for any user
        (can not query by `has_actions` and `has_actions_for_me` at the same time)
      required: false
      schema:
        type: boolean
        example: true
    query_has_actions_for_me:
      name: has_actions_for_me
      in: query
      description: >-
        Only return contacts who are owned by, and have actions for, the logged user
        (can not query by `has_actions` and `has_actions_for_me` at the same time)
      required: false
      schema:
        type: boolean
        example: true
    query_has_actions_today:
      name: has_actions_today
      in: query
      description: >-
        Only return contacts who are owned by, and have actions today for, the logged user
      required: false
      schema:
        type: boolean
        example: true
    query_lead_source:
      name: lead_source
      in: query
      description: >-
        Return contacts of a specific lead source (only use one of `lead_source` and `lead_source_id` at a time)
      required: false
      schema:
        type: string
        example: ''
    query_lead_source_id:
      name: lead_source_id
      in: query
      description: >-
        Return contacts of a specific lead source (only use one of `lead_source` and `lead_source_id` at a time)
      required: false
      schema:
        type: string
        example: 5aec63769007ba365a4e9ba0
    query_pending_deal:
      name: pending_deal
      in: query
      description: >-
        Only return contacts who have a pending deal
      required: false
      schema:
        type: boolean
        example: true
    query_starred:
      name: starred
      in: query
      description: >-
        Only return contacts who are starred
      required: false
      schema:
        type: boolean
        example: false
    query_status_id:
      name: status_id
      in: query
      description: Return contacts of a particular status
      required: false
      schema:
        type: string
        example: 5aaa9b039007ba08c9ebaf0b
    query_team:
      name: team
      in: query
      description: Include contacts owned by other users
      required: false
      schema:
        type: boolean
        example: true
    query_url:
      name: url
      in: query
      description: Search contacts by web address
      required: false
      schema:
        type: string
        example: https://example.com
    query_waiting:
      name: waiting
      in: query
      description: Only return contacts, for whom I have a next action, of status `waiting`
      required: false
      schema:
        type: boolean
        example: false
    query_not_linked_with:
      name: not_linked_with
      in: query
      description: >-
        Only return contacts who are not linked to a particular company (company's id expected here - cannot
        be used in conjunction with `company_id` param)
      required: false
      schema:
        type: string
        example: 5aba31e99007ba0f570c92ac
    query_custom_field_id:
      name: custom_field_id
      in: query
      description: Filter contacts by custom field value (combine with `custom_field_value`)
      required: false
      schema:
        type: string
        example: 5afaf6299007ba5c417f0d72
    query_custom_field_value:
      name: custom_field_value
      in: query
      description: Filter contacts by custom field value (combine with `custom_field_id`)
      required: false
      schema:
        type: string
    query_order:
      in: query
      name: order
      description: >-
        Specify the order (ascending or descending) of the sort of the results (use in conjunction with `sort_by`)
      schema:
        type: string
        enum:
        - asc
        - desc
    query_sort_by:
      name: sort_by
      in: query
      description: >-
        Specify field by which to order the results (use in conjunction with `order`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
    query_contacts_sort_by:
      name: sort_by
      in: query
      description: >-
        Specify field by which to order the results (use in conjunction with `order`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - first_name
        - last_name
        - company_name
        - name
    query_companies_sort_by:
      name: sort_by
      in: query
      description: >-
        Specify field by which to order the results (use in conjunction with `order`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - name
    query_deals_sort_by:
      name: sort_by
      in: query
      description: >-
        Specify field by which to order the results (use in conjunction with `order`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - date
        - close_date
        - expected_close_date
    query_notes_sort_by:
      name: sort_by
      in: query
      description: >-
        Specify field by which to order the results (use in conjunction with `order`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - updated_at
        - date
    query_calls_sort_by:
      name: sort_by
      in: query
      description: >-
        Specify field by which to order the results (use in conjunction with `order`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - updated_at
    query_custom_fields_sort_by:
      name: sort_by
      in: query
      description: >-
        Specify field by which to order the results (use in conjunction with `order`)
      schema:
        type: string
        enum:
        - created_at
        - modified_at
        - updated_at
        - position
    query_per_page:
      name: per_page
      in: query
      description: Number of records to return. Maximum 100 allowed. Default is 10.
      required: false
      schema:
        type: integer
        default: 10
        example: 10
    query_page:
      name: page
      in: query
      required: false
      description: Page number. Starts from 1. Default is 1.
      schema:
        type: integer
        default: 1
        example: 1
  responses:
    200:
      description: OK
    201:
      description: Created
    400:
      description: >-
        Bad Request. The request is not properly formatted, does not properly
        specify response format or contains improper parameters or data. Code
        400 means a problem is in your implementation. Fault is on you. The
        example below is the format for all responses in the 4XX range.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    401:
      description: >-
        Unauthorized. Authorization data is absent, invalid or expired.
        Generally this means that a login form should be displayed to a user.
        Code 401 means user just needs to login. Generally, fault is on no one.
    403:
      description: >-
        Forbidden. Issued when user is logged in, but does not have permission
        for requested operation. This includes cases when user has reached
        limits like allowed number of contacts. Code 403 means operation is
        forbidden for a user. Fault is on user. Although in some cases, you
        could have prevented this by not sending the request in the first place.
    404:
      description: >-
        Resource Not Found. When an id was provided for a request but no
        resource exists for that object.
    409:
      description: >-
        Precondition Failed. Server state does not allow requested operation to
        be carried on. Issued in cases such as when trying to add an assigned
        next action to a contact which already has one assigned for a user. Code
        409 means the stars were not aligned for this to happen. Sometimes you
        could have foreseen it, sometimes not.
    500:
      description: Internal Server Error. Code 500 means server messed up. Fault is on us.
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
